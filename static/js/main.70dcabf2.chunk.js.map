{"version":3,"sources":["Range.js","Chart.jsx","App.jsx","reportWebVitals.js","index.js"],"names":["total","step","from","i","colors","attrs","scores","numSides","Object","keys","length","size","numPolys","segment","Math","PI","start","thetas","Range","angles","reduce","out","key","idx","xmlns","xmlnsXlink","width","height","viewBox","version","id","transform","cos","map","last","dist","points","entries","theta","x","y","sin","circPercent","d","p","join","cx","cy","r","mask","fill","values","stroke","strokeWidth","incr","href","className","style","toFixed","W","U","R","B","G","defZero","get","target","name","useState","statements","setStatements","maxes","setMaxes","index","setIndex","load","a","fetch","res","yaml","text","Proxy","forEach","s","low","high","useEffect","align","pt","current","q","undefined","response","abs","normalized","k","answer","change","as","title","question","onClick","justify","flexDir","maxW","minH","borderRadius","direction","isActive","colorScheme","isDisabled","leftIcon","ArrowBack","rightIcon","ArrowForward","Chart","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.70dcabf2.chunk.js","sourcesContent":["// https://stackoverflow.com/a/64628011/264008\nexport default function*(total = 0, step = 1, from = 0) {\n  for(let i = 0; i < total; yield from + i++ * step) {}\n}","import Range from './Range'\nimport './App.scss'\n\nexport default ({ colors, attrs, scores }) => {\n  const numSides = Object.keys(colors).length\n  const numPolys = 10\n  const incr = 10\n  const size = numPolys * incr\n  const segment = 2 * Math.PI / numSides\n  const start = Math.PI / 2\n  const thetas = [...Range(numSides, segment, start)]\n  const angles = Object.keys(colors).reduce((out, key, idx) => {\n    out[key] = thetas[idx]\n    return out\n  }, {})\n\n  return (\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      xmlnsXlink=\"http://www.w3.org/1999/xlink\"\n      width=\"100%\" height=\"100%\"\n      viewBox=\"-110 -110 220 220\"\n      version=\"1.1\"\n      id=\"5-color-radar\"\n    >\n      <title>Magic: The Gathering Five Color Personality Radar Chart</title>\n      {/* The pentagon is taller on top than the bottom & needs to be shifted */}\n      <g transform={`translate(0, ${(size - size * Math.cos(segment / 2)) / 2})`}>\n        {[...Range(numPolys, 1, 1)].map((idx) => {\n          const last = idx === numPolys\n          const dist = idx * incr\n          const points = Object.entries(angles).map(([key, theta]) => (\n            {\n              x: dist * Math.cos(theta),\n              y: dist * -Math.sin(theta),\n              key,\n            }\n          ))\n          const circPercent = 0.7 // percentage of distance to edge to draw color circle\n          return <>\n            {last &&\n              <>\n                <path id='web' key='web'\n                  d={points.map(p => `M0,0l${p.x},${p.y}`).join('')}\n                />\n                {points.map((p, i) => (\n                  <g id={attrs[p.key]} key={attrs[p.key]}>\n                    <circle\n                      cx={circPercent * p.x}\n                      cy={circPercent * p.y}\n                      r={0.4 * size}\n                      mask='url(\"#surround\")'\n                      fill={Object.values(colors)[i]}\n                    >\n                      <title>{attrs[p.key]}</title>\n                    </circle>\n                    <circle\n                      cx={circPercent * p.x}\n                      cy={circPercent * p.y}\n                      r={0.4 * size}\n                      mask='url(\"#outside\")'\n                      fill='none' stroke='black'\n                      strokeWidth={incr / 2}\n                    />\n                  </g>\n                ))}\n              </>\n            }\n            <g id={`poly${idx}`} key={`poly${idx}`}>\n              {last\n                ? (\n                  <>\n                    <defs>\n                      <polygon id='outer'\n                        points={points.map(p => `${p.x},${p.y}`).join(' ')}\n                      />\n                      <mask id='surround'>\n                        <use id='surrmask' href='#outer'/>\n                      </mask>\n                      <mask id='outside'>\n                        <use id='outmask' href='#outer'/>\n                      </mask>\n                    </defs>\n                    <use href='#outer' className='container'/>\n                  </>\n                ) : (\n                  <polygon\n                    className='container'\n                    points={points.map(p => `${p.x},${p.y}`).join(' ')}\n                  />\n                )\n              }\n            </g>\n          </>\n        })}\n        {(() => {\n          const points = Object.entries(scores).map(([key, score], i) => {\n            const r = score * size\n            return {\n              x: r * Math.cos(angles[key]),\n              y: r * -Math.sin(angles[key]),\n              key,\n            }\n          })\n          return (\n            <g>\n              <defs key='defs'>\n                <polygon id='spread'\n                  points={points.map(p => `${p.x},${p.y}`).join(' ')}\n                />\n                <clipPath id='spreadclip'>\n                  <use href='#spread'\n                    transform={`translate(${size},${size})`}\n                  />\n                </clipPath>\n              </defs>\n              <foreignObject\n                key='foreign'\n                x={-size} y={-size}\n                width={size * 2} height={size * 2}\n              >\n                <div id='coloredspread' key='coloredspread'/>\n              </foreignObject>\n              <use key='use' href='#spread' fill='none' stroke='black'/>\n              {points.map((p, i) => (\n                <circle key={p.key}\n                  cx={p.x} cy={p.y} r={0.25 * incr}\n                  className='point'\n                  style={{ fill: colors[p.key] }}\n                >\n                  <title>{`${attrs[p.key]}: ${(scores[p.key] * 100).toFixed(1)}%`}</title>\n                </circle>\n              ))}\n            </g>\n          )\n        })()}\n      </g>\n   </svg>\n  )\n}","import * as yaml from 'js-yaml'\nimport { useEffect, useState } from 'react'\nimport {\n  Flex, Stack, Box, Spinner, Button, ButtonGroup\n} from '@chakra-ui/react'\nimport { ArrowBackIcon, ArrowForwardIcon } from '@chakra-ui/icons'\nimport Chart from './Chart'\nimport './Chart.scss'\n\nconst source = (\n  'https://raw.githubusercontent.com/Jerdle-code/color-pie-test/main/readable_questions.txt'\n)\nconst colors = {\n  W: 'white', U: 'blue', R: 'red', B: 'black', G: 'green'\n}\nconst attrs = {\n  W: 'Justice', U: 'Wisdom', R: 'Chaos', B: 'Ambition', G: 'Balance'\n}\n\nvar defZero = {\n  get: (target, name) => (\n    name in target ? target[name] : 0\n  )\n}\n\nexport default () => {\n  const [statements, setStatements] = useState()\n  const [maxes, setMaxes] = useState()\n  const [index, setIndex] = useState(0)\n  const load = async () => {\n    const res = await fetch(source)\n    const statements = yaml.load(await res.text())\n    setStatements(statements)\n    const maxes = new Proxy({}, defZero)\n    statements.forEach((s) => {\n      maxes[s.low] += 2\n      maxes[s.high] += 2\n    })\n    setMaxes(maxes)\n  }\n  useEffect(() => load(), [])\n\n  if(!statements) {\n    return (\n      <Stack align='center' pt={10}>\n        <Box>Loading Statements…</Box>\n        <Spinner/>\n      </Stack>\n    )\n  }\n\n  if(!maxes) {\n    return (\n      <Stack align='center' pt={10}>\n        <Box>Processing Statements…</Box>\n        <Spinner/>\n      </Stack>\n    )\n  }\n\n  const current = new Proxy({}, defZero)\n  statements.forEach(q => {\n    if(q.response !== undefined) {\n      if(q.response < 0) {\n        current[q.low] += Math.abs(q.response)\n      } else if(q.response > 0) {\n        current[q.high] += Math.abs(q.response)\n      } else if(q.response === null) {\n        // do nothing for \"don't care\"\n      } else if(q.response === 0) {\n        current[q.low] += 1\n        current[q.high] += 1\n      }\n    }\n  })\n  const normalized = {}\n  Object.keys(colors).forEach(k => normalized[k] = (current[k] ?? 0) / maxes[k])\n\n  const answer = (res) => {\n    setStatements((statements) => {\n      const change = [...statements]\n      change[index].response = res\n      return change\n    })\n    setIndex(index + 1)\n  }\n\n  return (\n    <Stack>\n      <Flex as='nav' key='head'>\n        {statements.map((q, i) => (\n          <span key={i}\n            className={[\n              index === i ? 'current' : null,\n              q.response !== undefined ? 'done' : 'unanswered',\n              `${q.low}${q.high}`,\n              q.response !== undefined ? `res${q.response}` : null,\n            ].join(' ')}\n            title={`Question #${i + 1}: ${statements[i].question}`}\n            onClick={() => setIndex(i)}\n          ></span>\n        ))}\n      </Flex>\n      <Box>\n        <Flex justify='center' align='center' flexDir='column'>\n          <Box maxW={['10rem', '40rem']} minH='3rem'>\n            {statements[index] && <q>{statements[index]?.question}</q>}\n          </Box>\n          {statements[index] &&\n            <Stack pt={5}>\n              <Box id='colors'\n                minH={3} borderRadius={10}\n                className={`${statements[index].low}${statements[index].high}`}\n              ></Box>\n              <Stack direction={['column', 'row']}>\n                <Button\n                  isActive={statements[index].response === -2}\n                  colorScheme='red'\n                  onClick={() => answer(-2)}\n                >Strongly Disagree</Button>\n                <Button\n                  isActive={statements[index].response === -1}\n                  colorScheme='pink'\n                  onClick={() => answer(-1)}\n                >Disagree</Button>\n                <Button\n                  isActive={statements[index].response === 0}\n                  colorScheme='blue'\n                  onClick={() => answer(0)}\n                >Ambivalent</Button>\n                <Button\n                  isActive={statements[index].response === 1}\n                  colorScheme='teal'\n                  onClick={() => answer(1)}\n                >Agree</Button>\n                <Button\n                  isActive={statements[index].response === 2}\n                  colorScheme='green'\n                  onClick={() => answer(2)}\n                >Strongly Agree</Button>\n              </Stack>\n            </Stack>\n          }\n          <ButtonGroup pt={5}>\n            <Button\n              isDisabled={index === 0}\n              colorScheme='purple'\n              leftIcon={<ArrowBackIcon/>}\n              onClick={() => setIndex(index - 1)}\n            >Back</Button>\n            <Button\n              isDisabled={index >= statements.length}\n              colorScheme='purple'\n              rightIcon={<ArrowForwardIcon/>}\n              onClick={() => answer(null)}\n            >No Opinion</Button>\n          </ButtonGroup>\n        </Flex>\n      </Box>\n      <hr/>\n      <Chart key='chart' {...{ colors, attrs, scores: normalized }}/>\n    </Stack>\n  )\n}","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { ChakraProvider } from \"@chakra-ui/react\"\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode><ChakraProvider>\n    <App />\n  </ChakraProvider></React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}