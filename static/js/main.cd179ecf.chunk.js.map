{"version":3,"sources":["icons lazy /^/.//.*/.svg$/ groupOptions: {} namespace object","Sliders lazy groupOptions: {} namespace object","util/reportWebVitals.js","data/order.js","Chart/ConicRadar.jsx","Chart/index.jsx","data/combos.js","Results.jsx","data/statements.js","Reducer.js","Test/index.jsx","Combos/index.jsx","Sliders/Side.jsx","Sliders/Linkages.jsx","Sliders/index.jsx","Explore.jsx","Ranges.jsx","Home.jsx","images/background.jpg","App.jsx","index.js","util/index.jsx","icons/MetaGame/Ambition.svg","icons/MetaGame/Balance.svg","icons/MetaGame/Chaos.svg","icons/MetaGame/Justice.svg","icons/MetaGame/Wisdom.svg"],"names":["map","webpackAsyncContext","req","__webpack_require__","o","Promise","resolve","then","e","Error","code","ids","id","all","slice","keys","Object","module","exports","webpackEmptyAsyncContext","onPerfEntry","colors","conflicts","reasons","left","right","names","white","blue","red","black","green","connect","state","weights","size","numWeights","order","length","segment","Math","PI","start","thetas","Range","points","color","i","r","x","cos","y","sin","p","join","href","transform","width","height","fill","stroke","cx","cy","className","style","capitalize","toFixed","numPolys","circCent","Circles","mask","toUpperCase","strokeWidth","incr","xmlns","xmlnsXlink","viewBox","idx","last","dist","theta","path","Link","children","args","textDecoration","masks","0","descriptions","Colorless","White","as","fontWeight","Blue","Black","Red","Green","useState","icons","setIcons","load","useCallback","a","values","combos","combo","default","useEffect","setMask","name","update","maxWeight","max","position","entries","forEach","weight","parseInt","c","align","justify","pb","direction","alt","data","maxH","maxW","high","low","reducers","setActive","action","active","$set","payload","setOrigin","origin","setPosition","positions","$merge","setHandle","handle","handles","setTransform","transforms","setWeight","setWeights","setConflict","conflict","initialState","undefined","positionSlice","createSlice","store","configureStore","reducer","type","dispatch","actions","storageMap","1","2","3","4","5","6","history","ments","statements","setStatements","maxes","setMaxes","index","setIndex","showing","setShowing","useParams","answers","response","packed","atob","num","toString","off","ceil","bits","BigInt","stored","res","Proxy","defZero","s","current","q","abs","fromEntries","location","useLocation","answer","change","storage","find","pathname","replace","push","btoa","err","timents","Sentiments","timent","isActive","colorScheme","onClick","Navigation","pt","isDisabled","leftIcon","ArrowBack","rightIcon","ArrowForward","ColorBar","from","to","background","Statement","positon","minH","ml","textAlign","GetResult","title","h","w","filter","minW","margin","ArrowUp","ArrowDown","SVG","chakra","baseStyle","attributeType","attributeName","dur","repeatCount","calcMode","d","textAnchor","bounds","min","rot","shrink","l","useMemo","normHandle","toEdge","sqrt","handleRef","useRef","closest","document","querySelector","gradientUnits","x1","y1","x2","y2","offset","stopColor","toDeg","onMouseDown","evt","text","ref","markerStart","markerEnd","fillOpacity","polygon","setPolygon","plot","arc","defined","n","norms","axes","scores","p1","p2","split","normsToWeights","reverse","point","strokeOpacity","images","setImages","svg","console","warn","Ambition","Balance","Chaos","Justice","Wisdom","BgImage","toLowerCase","rx","ry","xlinkHref","StarSide","mouseUp","WebkitTextStrokeColor","onMouseMove","pos","createSVGPoint","pointFor","clientX","clientY","matrixTransform","getScreenCTM","inverse","onMouseUp","onMouseOut","target","stopPropagation","preserveAspectRatio","in","stdDeviation","begin","dx","dy","result","floodColor","in2","operator","refX","refY","markerWidth","markerHeight","orient","numReasons","Array","setValues","value","bg","onChange","val","vs","splice","Text","RouterLink","m","overrides","config","initialColorMode","styles","global","body","bgImage","theme","extendTheme","basename","isOpen","Button","top","ChevronDown","Hamburger","component","Combos","Explore","Test","exact","Home","ReactDOM","render","StrictMode","App","getElementById","Function","getCLS","getFID","getFCP","getLCP","getTTFB","total","step","str","substring","rad","window","big","Buffer","b64","get"],"mappings":"+HAAA,IAAIA,EAAM,CACT,qBAAsB,CACrB,IACA,GAED,mBAAoB,CACnB,IACA,GAED,iBAAkB,CACjB,IACA,GAED,iBAAkB,CACjB,IACA,GAED,uBAAwB,CACvB,IACA,GAED,mBAAoB,CACnB,IACA,GAED,cAAe,CACd,IACA,GAED,aAAc,CACb,IACA,IAED,qBAAsB,CACrB,IACA,IAED,cAAe,CACd,IACA,IAED,kBAAmB,CAClB,IACA,IAED,uBAAwB,CACvB,IACA,IAED,oBAAqB,CACpB,IACA,IAED,sBAAuB,CACtB,IACA,IAED,cAAe,CACd,IACA,IAED,qBAAsB,CACrB,IACA,IAED,eAAgB,CACf,IACA,IAED,oBAAqB,CACpB,IACA,IAED,oBAAqB,CACpB,IACA,IAED,qBAAsB,CACrB,IACA,IAED,mBAAoB,CACnB,IACA,IAED,mBAAoB,CACnB,IACA,IAED,aAAc,CACb,IACA,IAED,oBAAqB,CACpB,IACA,IAED,0BAA2B,CAC1B,IAED,yBAA0B,CACzB,IAED,uBAAwB,CACvB,IAED,yBAA0B,CACzB,IAED,wBAAyB,CACxB,IAED,mBAAoB,CACnB,IACA,IAED,yBAA0B,CACzB,IACA,IAED,YAAa,CACZ,IACA,IAED,0BAA2B,CAC1B,IACA,IAED,sBAAuB,CACtB,IACA,IAED,qBAAsB,CACrB,IACA,IAED,uBAAwB,CACvB,IACA,IAED,cAAe,CACd,IACA,IAED,cAAe,CACd,IACA,IAED,8BAA+B,CAC9B,IACA,IAED,4BAA6B,CAC5B,IACA,IAED,6BAA8B,CAC7B,IACA,IAED,2BAA4B,CAC3B,IACA,IAED,6BAA8B,CAC7B,IACA,IAED,8BAA+B,CAC9B,IACA,IAED,4BAA6B,CAC5B,IACA,IAED,4BAA6B,CAC5B,IACA,IAED,8BAA+B,CAC9B,IACA,IAED,6BAA8B,CAC7B,IACA,KAGF,SAASC,EAAoBC,GAC5B,IAAIC,EAAoBC,EAAEJ,EAAKE,GAC9B,OAAOG,QAAQC,UAAUC,MAAK,WAC7B,IAAIC,EAAI,IAAIC,MAAM,uBAAyBP,EAAM,KAEjD,MADAM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c,KAAM,OACNC,IAAK,SAET,CACIf,SAAU,wGACVc,KAAM,QACNC,IAAK,SAET,CACIf,SAAU,qGACVc,KAAM,QACNC,IAAK,QAET,CACIf,SAAU,yDACVc,KAAM,QACNC,IAAK,OAET,CACIf,SAAU,2FACVc,KAAM,QACNC,IAAK,SAET,CACIf,SAAU,sFACVc,KAAM,MACNC,IAAK,SAET,CACIf,SAAU,iEACVc,KAAM,MACNC,IAAK,QAET,CACIf,SAAU,+EACVc,KAAM,MACNC,IAAK,SAET,CACIf,SAAU,yEACVc,KAAM,MACNC,IAAK,SAET,CACIf,SAAU,2GACVc,KAAM,QACNC,IAAK,SAET,CACIf,SAAU,yJACVc,KAAM,QACNC,IAAK,QAET,CACIf,SAAU,yGACVc,KAAM,QACNC,IAAK,SAET,CACIf,SAAU,yGACVc,KAAM,QACNC,IAAK,OAET,CACIf,SAAU,sHACVc,KAAM,QACNC,IAAK,QAET,CACIf,SAAU,2FACVc,KAAM,QACNC,IAAK,SAET,CACIf,SAAU,oHACVc,KAAM,QACNC,IAAK,OAET,CACIf,SAAU,4CACVc,KAAM,QACNC,IAAK,SAET,CACIf,SAAU,iHACVc,KAAM,OACNC,IAAK,SAET,CACIf,SAAU,qIACVc,KAAM,OACNC,IAAK,SAET,CACIf,SAAU,wHACVc,KAAM,OACNC,IAAK,OAET,CACIf,SAAU,sGACVc,KAAM,OACNC,IAAK,SAET,CACIf,SAAU,+FACVc,KAAM,QACNC,IAAK,SAET,CACIf,SAAU,qJACVc,KAAM,QACNC,IAAK,QAET,CACIf,SAAU,yGACVc,KAAM,QACNC,IAAK,OAET,CACIf,SAAU,iIACVc,KAAM,QACNC,IAAK,SAET,CACIf,SAAU,oEACVc,KAAM,MACNC,IAAK,SAET,CACIf,SAAU,yGACVc,KAAM,MACNC,IAAK,QAET,CACIf,SAAU,4EACVc,KAAM,MACNC,IAAK,SAET,CACIf,SAAU,oGACVc,KAAM,MACNC,IAAK,SAET,CACIf,SAAU,8DACVc,KAAM,QACNC,IAAK,SAET,CACIf,SAAU,uFACVc,KAAM,QACNC,IAAK,QAET,CACIf,S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","file":"static/js/main.cd179ecf.chunk.js","sourcesContent":["var map = {\n\t\"./Abzan Houses.svg\": [\n\t\t133,\n\t\t3\n\t],\n\t\"./Aggression.svg\": [\n\t\t134,\n\t\t4\n\t],\n\t\"./Altruism.svg\": [\n\t\t135,\n\t\t5\n\t],\n\t\"./Artifice.svg\": [\n\t\t136,\n\t\t6\n\t],\n\t\"./Azorius Senate.svg\": [\n\t\t137,\n\t\t7\n\t],\n\t\"./Bant Shard.svg\": [\n\t\t138,\n\t\t8\n\t],\n\t\"./Black.svg\": [\n\t\t139,\n\t\t9\n\t],\n\t\"./Blue.svg\": [\n\t\t140,\n\t\t10\n\t],\n\t\"./Boros Legion.svg\": [\n\t\t141,\n\t\t11\n\t],\n\t\"./Chaos.svg\": [\n\t\t142,\n\t\t12\n\t],\n\t\"./Colorless.svg\": [\n\t\t143,\n\t\t13\n\t],\n\t\"./Cult of Rakdos.svg\": [\n\t\t144,\n\t\t14\n\t],\n\t\"./Esper Shard.svg\": [\n\t\t145,\n\t\t15\n\t],\n\t\"./Golgari Swarm.svg\": [\n\t\t146,\n\t\t16\n\t],\n\t\"./Green.svg\": [\n\t\t147,\n\t\t17\n\t],\n\t\"./Grixis Shard.svg\": [\n\t\t148,\n\t\t18\n\t],\n\t\"./Growth.svg\": [\n\t\t149,\n\t\t19\n\t],\n\t\"./Gruul Clans.svg\": [\n\t\t150,\n\t\t20\n\t],\n\t\"./House Dimir.svg\": [\n\t\t151,\n\t\t21\n\t],\n\t\"./Izzet League.svg\": [\n\t\t152,\n\t\t22\n\t],\n\t\"./Jeskai Way.svg\": [\n\t\t153,\n\t\t23\n\t],\n\t\"./Jund Shard.svg\": [\n\t\t154,\n\t\t24\n\t],\n\t\"./Jund.svg\": [\n\t\t155,\n\t\t25\n\t],\n\t\"./Mardu Horde.svg\": [\n\t\t156,\n\t\t26\n\t],\n\t\"./MetaGame/Ambition.svg\": [\n\t\t76\n\t],\n\t\"./MetaGame/Balance.svg\": [\n\t\t77\n\t],\n\t\"./MetaGame/Chaos.svg\": [\n\t\t78\n\t],\n\t\"./MetaGame/Justice.svg\": [\n\t\t79\n\t],\n\t\"./MetaGame/Wisdom.svg\": [\n\t\t80\n\t],\n\t\"./Naya Shard.svg\": [\n\t\t157,\n\t\t27\n\t],\n\t\"./Orzhov Syndicate.svg\": [\n\t\t158,\n\t\t28\n\t],\n\t\"./Red.svg\": [\n\t\t159,\n\t\t29\n\t],\n\t\"./Selesnya Conclave.svg\": [\n\t\t160,\n\t\t30\n\t],\n\t\"./Simic Combine.svg\": [\n\t\t161,\n\t\t31\n\t],\n\t\"./Sultai Brood.svg\": [\n\t\t162,\n\t\t32\n\t],\n\t\"./Temur Frontier.svg\": [\n\t\t163,\n\t\t33\n\t],\n\t\"./WUBRG.svg\": [\n\t\t164,\n\t\t34\n\t],\n\t\"./White.svg\": [\n\t\t165,\n\t\t35\n\t],\n\t\"./duals/Black and Green.svg\": [\n\t\t166,\n\t\t36\n\t],\n\t\"./duals/Black and Red.svg\": [\n\t\t167,\n\t\t37\n\t],\n\t\"./duals/Blue and Black.svg\": [\n\t\t168,\n\t\t38\n\t],\n\t\"./duals/Blue and Red.svg\": [\n\t\t169,\n\t\t39\n\t],\n\t\"./duals/Green and Blue.svg\": [\n\t\t170,\n\t\t40\n\t],\n\t\"./duals/Green and White.svg\": [\n\t\t171,\n\t\t41\n\t],\n\t\"./duals/Red and Green.svg\": [\n\t\t172,\n\t\t42\n\t],\n\t\"./duals/Red and White.svg\": [\n\t\t173,\n\t\t43\n\t],\n\t\"./duals/White and Black.svg\": [\n\t\t174,\n\t\t44\n\t],\n\t\"./duals/White and Blue.svg\": [\n\t\t175,\n\t\t45\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn Promise.all(ids.slice(1).map(__webpack_require__.e)).then(function() {\n\t\treturn __webpack_require__(id);\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = 122;\nmodule.exports = webpackAsyncContext;","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = 128;","export default (onPerfEntry) => {\n  if(onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry)\n      getFID(onPerfEntry)\n      getFCP(onPerfEntry)\n      getLCP(onPerfEntry)\n      getTTFB(onPerfEntry)\n    })\n  }\n}","// order the colors appear in clockwise from the top\nexport const colors = [\n  'white', 'blue', 'black', 'red', 'green'\n]\n\n// order of the conflicts going clockwise from the top\n// this could be derived from the `colors` order, allowing\n// the colors to change throughout dyanimcally, but\n// I can't be bothered at the moment 🐰\nexport const conflicts = [\n  'green-blue', 'white-black',\n  'blue-red', 'black-green', \n  'red-white', \n]\n\nexport const reasons = {\n  'red-white': { left: 'Chaos', right: 'Order' },\n  'white-black': { left: 'Group', right: 'Individual' },\n  'black-green': { left: 'Exploitation', right: 'Preservation' },\n  'green-blue': { left: 'Nature', right: 'Nurture' },\n  'blue-red': { left: 'Reason', right: 'Emotion' },\n}\n\n\n// MetaGame specific mapping of colors to terms\n// The deeper I get into this, the worse an idea leaving\n// the canon seems. There's just too much built using\n// an existing vocabulary to just abandon it…\nexport const names = {\n  white: 'Justice', blue: 'Wisdom', red: 'Chaos',\n  black: 'Ambition', green: 'Balance',\n}\n","import { connect } from 'react-redux'\nimport { Range, capitalize } from '../util'\nimport { colors as order } from '../data/order'\n\nconst ConicRadar = ({ weights, size }) => {\n  const numWeights = order.length\n  const segment = 2 * Math.PI / numWeights\n  const start = Math.PI / 2\n  const thetas = [...Range(numWeights, segment, start)]\n  const points = (\n    order.map((color, i) => {\n      const r = (weights[color] ?? 0) * size\n      return {\n        color,\n        x: r * Math.cos(thetas[i]),\n        y: r * -Math.sin(thetas[i]),\n      }\n    })\n  )\n\n  return (\n    <g>\n      <defs key='defs'>\n        <polygon id='spread'\n          points={points.map(p => `${p.x},${p.y}`).join(' ')}\n        />\n        <clipPath id='spreadclip'>\n          <use href='#spread'\n            transform={`translate(${size},${size})`}\n          />\n        </clipPath>\n      </defs>\n      {/* Conic gradients are only supported for HTML elements */}\n      <foreignObject\n        key='foreign'\n        x={-size} y={-size}\n        width={size * 2} height={size * 2}\n      >\n        <div id='coloredspread' key='coloredspread'/>\n      </foreignObject>\n      <use key='use' href='#spread' fill='none' stroke='black'/>\n      {points.map((p, i) => (\n        <circle key={p.color}\n          cx={p.x} cy={p.y} r={0.05 * size}\n          className='point'\n          style={{ fill: order[i] }}\n        >\n          <title>{`${capitalize(p.color)}: ${(weights[p.color] * 100).toFixed(1)}%\n          `}</title>\n        </circle>\n      ))}\n    </g>\n  )\n}\n\nexport default connect(\n  (state) => {\n    const { weights } = state\n    return { weights }\n  },\n)(ConicRadar)","import { connect } from 'react-redux'\nimport ConicRadar from './ConicRadar'\nimport { Range } from '../util'\nimport { colors as order } from '../data/order'\nimport './Chart.scss'\n\nconst Chart = ({ weights }) => {\n  const numWeights = order.length\n  const segment = 2 * Math.PI / numWeights\n  const start = Math.PI / 2\n  const thetas = [...Range(numWeights, segment, start)]\n  const numPolys = 10\n  const incr = 10\n  const size = numPolys * incr\n   // percentage of distance to edge to draw color circle\n  const circCent = 0.7\n\n  const Circles = ({ points }) => (\n    <g id='circles' key='circles'>\n      {points.map((p, i) => (\n        <g id={order[i]} key={order[i]}>\n          <circle\n            cx={circCent * p.x}\n            cy={circCent * p.y}\n            r={0.4 * size}\n            mask='url(\"#surround\")'\n            fill={order[i]}\n          >\n            <title>{order[i].toUpperCase()}</title>\n          </circle>\n          <circle\n            cx={circCent * p.x}\n            cy={circCent * p.y}\n            r={0.4 * size}\n            mask='url(\"#outside\")'\n            fill='none' stroke='black'\n            strokeWidth={incr / 2}\n          >\n            <title>{order[i].toUpperCase()}</title>\n          </circle>\n        </g>\n      ))}\n    </g>\n  )\n\n  return (\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      xmlnsXlink=\"http://www.w3.org/1999/xlink\"\n      width=\"100%\" height=\"100%\"\n      viewBox={[\n        -size * 1.1, -size * 1.1, size * 2.2, size * 2.2\n      ].join(' ')}\n    >\n      <title>Magic: The Gathering Five Color Disposition Radar Chart</title>\n      {/* The pentagon is taller on top than the bottom & needs to be shifted */}\n      <g transform={`translate(\n        0, ${(size - size * Math.cos(segment / 2)) / 2}\n      )`}>\n        <g id='rings'>\n          {[...Range(numPolys, 1, 1)].map((idx) => {\n            const last = idx === numPolys\n            const dist = idx * incr\n            const points = thetas.map((theta) => (\n              {\n                x: dist * Math.cos(theta),\n                y: dist * -Math.sin(theta),\n              }\n            ))\n            const path = points.map(\n              p => `${p.x},${p.y}`\n            ).join(' ')\n \n            return (\n              <>\n                {last && (\n                  <defs key='defs'>\n                    <polygon id='outer'\n                      points={path}\n                    />\n                    <mask id='surround'>\n                      <use id='surrmask' href='#outer'/>\n                    </mask>\n                    <mask id='outside'>\n                      <use id='outmask' href='#outer'/>\n                    </mask>\n                  </defs>\n                )}\n                {last\n                  ? <>\n                    <use\n                      id='outeruse'\n                      key='outer'\n                      href='#outer'\n                      className='ring'\n                    />\n                    <Circles {...{ points }}/>\n                  </> : (\n                    <polygon\n                      key={idx}\n                      className='ring '\n                      points={path}\n                    />\n                  )\n                }\n              </>\n            )\n          })}\n        </g>\n        <ConicRadar {...{ size }}/>\n      </g>\n   </svg>\n  )\n}\n\nexport default connect(\n  (state) => {\n    const { weights } = state\n    return { weights }\n  },\n)(Chart)","import { Text, Link as ChakraLink, Stack } from '@chakra-ui/react'\n\nconst Link = ({ children, ...args }) => (\n  <ChakraLink {...args} textDecoration='underline'>\n    {children}\n  </ChakraLink>\n)\n\nexport const masks = {\n\t0b00000: 'Colorless',\n\t0b10000: 'White',\n\t0b01000: 'Blue',\n\t0b00100: 'Black',\n\t0b00010: 'Red',\n\t0b00001: 'Green',\n  0b11000: 'Azorius Senate',    // WU\n  0b01100: 'House Dimir',       // UB\n  0b00101: 'Golgari Swarm',     // BG\n  0b00011: 'Gruul Clans',       // RG\n  0b10001: 'Selesnya Conclave', // WG\n  0b01001: 'Simic Combine',     // UG\n  0b10100: 'Orzhov Syndicate',  // WB\n  0b01010: 'Izzet League',      // UR\n  0b00110: 'Cult of Rakdos',    // BR\n  0b10010: 'Boros Legion',      // WR\n  0b11001: 'Bant Shard',        // WUG\n  0b11100: 'Esper Shard',       // WUB\n  0b01110: 'Grixis Shard',      // UBR\n  0b00111: 'Jund Shard',        // BRG\n  0b10011: 'Naya Shard',        // WRG\n  0b11010: 'Jeskai Way',        // WUR\n  0b01101: 'Sultai Brood',      // UBG\n  0b10110: 'Mardu Horde',       // WBR\n  0b01011: 'Temur Frontier',    // URG\n  0b10101: 'Abzan Houses',      // WBG\n  0b11110: 'Artifice',   // WUBR\n  0b11101: 'Growth',     // WUBG\n  0b11011: 'Altruism',   // WURG\n  0b10111: 'Aggression', // WBRG\n  0b01111: 'Chaos',      // UBRG\n\t0b11111: 'WUBRG',\n}\n\nexport const descriptions = {\n  Colorless: (\n    <Text>You have no personality. Sorry. ☹</Text>\n  ),\n  White: (\n    <Stack>\n      <Text><Link href='https://humanparts.medium.com/the-mtg-color-wheel-c9700a7cf36d#e062:~:text=White%20seeks%20peace'><Text as='span' fontWeight='bold'>White</Text> seeks <Text as='i'>peace</Text>,</Link> and it tries to achieve that peace through the imposition of <Text as='i'>order</Text>. White believes that the solution to all suffering and unhappiness is coordination and cooperation and rules and restraint. The archetypal white organization would be a church, and a white dystopia would be a fascist regime such as the one in George Orwell’s <Text as='cite'>1984</Text>, or a stagnant society like the one in Lois Lowry’s <Text as='cite'>The Giver</Text>.</Text>\n      <Text>A white agent, when presented with a decision or quandary, asks <Text as='i'>what is the <Text as='b'>right</Text> course of action to take</Text>, where <Text as='q'>right</Text> depends on their moral or cultural framework.</Text>\n    </Stack>\n  ),\n  Blue: (\n    <Stack>\n      <Text><Link href='https://humanparts.medium.com/the-mtg-color-wheel-c9700a7cf36d#da92:~:text=Blue%20seeks%20perfection'><Text as='span' fontWeight='bold'>Blue</Text> seeks <Text as='i'>perfection</Text>,</Link> and it tries to achieve that perfection through the pursuit of <Text as='i'>knowledge</Text>. Blue believes that things could be almost arbitrarily good if we could all just figure out the truth, and then apply that understanding to its fullest extent. The archetypal blue organization would be a university or a research lab, and a blue dystopia would be one in which efficiency were pursued without morals or limits, or in which intelligence were the sole axis of a meritocracy.</Text>\n      <Text>A blue agent, when presented with a decision or quandary, asks <Text as='i'>what course of action makes the most <Text as='b'>sense</Text></Text>, where <Text as='i'>sense</Text> is determined by careful thought and the application of knowledge and expertise.</Text>\n    </Stack>\n  ),\n  Black: (\n    <Stack>\n      <Text><Link href='https://humanparts.medium.com/the-mtg-color-wheel-c9700a7cf36d#4c78:~:text=Black%20seeks%20satisfaction'><Text as='b'>Black</Text> seeks <Text as='i'>satisfaction</Text>,</Link> and it tries to achieve that satisfaction through <Text as='i'>ruthlessness</Text>. Black wants power and agency so that it can act upon its preferences at any time, reshaping the world around it into whatever it wants. It recognizes no limits upon this pursuit except those which emerge from its own desires and self-interest. It is capable of cooperation and alliance, but only consequentially, as in game theory; at its core, black is amoral, not immoral, since it doesn’t think morality is even really a Thing. The archetypal black organization would be a hedge fund or a startup, and a black dystopia would be a totalitarian dictatorship.</Text>\n      <Text>A black agent, when presented with a decision or quandary, asks <i>what course of action will leave me <b>best off</b></i>, where <q>best off</q> includes having power, influence, safety, and wealth, as well as having moved closer to one’s goals.</Text>\n    </Stack>\n  ),\n  Red: (\n    <Stack>\n      <Text><Link href='https://humanparts.medium.com/the-mtg-color-wheel-c9700a7cf36d#4c78:~:text=Black%20seeks%20satisfaction'><Text as='b'>Red</Text> seeks <Text as='i'>freedom</Text>,</Link> and it tries to achieve that freedom through <Text as='i'>action</Text>. Red wants the ability to live in the moment and follow the thread of aliveness and passion. It’s a bit strange to speak of a red <Text as='q'>organization,</Text> but to the extent that it’s <i>possible</i> to have an archetypal red organization, it would be one of those art studios that’s owned by no one where there’s paint on every wall and it’s almost impossible to move around what with all of the dancing and debating and half-finished projects. A red dystopia, on the other hand, would simply be anarchy.</Text>\n      <Text>A red agent, when presented with a decision or quandary, asks <i>what do I <b>feel</b> like doing?</i></Text>\n    </Stack>\n  ),\n  Green: (\n    <Stack>\n      <Text><b>Green</b> seeks <i>harmony</i>, and it tries to achieve that harmony through <i>acceptance</i>. Green is the color of nature, wisdom, stoicism, taoism, and destiny; it believes that most of the suffering and misfortune in the world comes from attempts to cast off one’s natural mantle, step outside of one’s natural role, or fix things which aren’t broken — it’s the color of Chesterton’s Fence. It seeks to embrace what is — the archetypal green organization would be a hippie commune, or the pop culture interpretation of a Native American tribe (such as in Disney’s <cite>Pocahontas</cite>), while a green dystopia would be something like the society in <cite>Divergent</cite> or a tribe with absolutely rigid traditions and an unchanging and unchangeable relationship to its environment.</Text>\n      <Text>A green agent, when presented with a decision or quandary, asks <i>how are these things usually done?</i> <i>What is the established wisdom?</i></Text>\n    </Stack>\n  ),\n  'Azorius Senate':(      // WU\n    <Stack>\n      <Text><Link href='https://humanparts.medium.com/the-mtg-color-wheel-c9700a7cf36d#bc9b:~:text=White%20and%20blue%20are%20the%20enemies%20of%20red'>White and blue are the enemies of red</Link>, which they see as unfettered and chaotic. White and blue both agree that <i>structure</i> is important — white because it reduces the risk of conflict, and blue because it makes possible deep investigation and long-term or delicate optimization. Jean-Luc Picard from <cite>Star Trek</cite> is an excellent example of a white/blue archetype, as is the political persona of Hillary Clinton.</Text>\n      <Text>A white/blue agent asks the question <i>how do we <b>know</b> what’s right and good?</i> The whole concept of a <q>rationality technique</q> is extremely white/blue — the idea that we might create carefully defined, algorithmic heuristics for doing things better according to some outside standard is not one that other color combinations are likely to produce. Effective Altruism is also a white/blue movement, though it makes efforts to reach out to red (compassion) and black (taking the long view on self-interest).</Text>\n    </Stack>\n  ),\n  'House Dimir': (        // UB\n    <Stack>\n      <Text><Link href='https://humanparts.medium.com/the-mtg-color-wheel-c9700a7cf36d#ce71:~:text=Blue%20and%20black%20are%20the%20enemies%20of%20green'>Blue and black are the enemies of green</Link>, which they see as complacent and passive. Blue and black both agree on <i>growth mindset</i> — the idea that one is not defined by one’s origins or constrained to the role society has set. Blue/black characters are often intelligent, clever, arrogant, and aloof — notable examples include Odysseus from <cite>The Odyssey</cite>, Sherlock Holmes, Lex Luthor, and Quirinus Quirrell from <cite>HPMOR</cite>.</Text>\n      <Text>A blue/black agent asks the question <i>how can I <b>best</b> achieve my goals?</i> It’s fair to describe blue/black as the combination of <q>enlightened self-interest,</q> which is why it’s not surprising to find it overrepresented in communities like LessWrong and Silicon Valley, which see themselves as attempting to disrupt the status quo for the better. Transhumanism is a fundamentally blue-black worldview, in opposition to the green imperative to accept death as a crucial and inevitable part of life.</Text>\n    </Stack>\n  ),\n  'Golgari Swarm': (     // BG\n    <Stack>\n      <Text></Text>\n      <Text></Text>\n    </Stack>\n  ),\n  'Gruul Clans': (       // RG\n    <Stack>\n      <Text></Text>\n      <Text></Text>\n    </Stack>\n  ),\n  'Selesnya Conclave': ( // WG\n    <Stack>\n      <Text><Link href='https://humanparts.medium.com/the-mtg-color-wheel-c9700a7cf36d#c621:~:text=Green%20and%20white%20are%20the%20enemies%20of%20black'>Green and white are the enemies of black</Link>, which they see as selfish, short-sighted, and ultimately self-defeating. They both agree on <i>community</i> — that the whole can be greater than the sum of its parts, and that there are things larger than oneself that are worth sacrificing for. Hufflepuff House from <cite>Harry Potter</cite> is a green/white institution, and Akela from The <cite>Jungle Book</cite> is a green/white archetype. Other examples of people and characters in this space include Confucius, Jesus, Rufio from <cite>Hook</cite>, and Obi-Wan Kenobi (as played by Alec Guinness).</Text>\n      <Text>A green/white agent asks the question <i>what’s fair and good?</i> Green/white institutions tend to be centered around compassionate endeavors, but if they go astray it’s in the direction of well-meaning lost purposes and wasted signaling — a lack of blue’s epistemic hygiene — rather than in the direction of cold, heartless efficiency or relentless pursuit of knowledge or the bottom line. They include institutions like the YMCA, Habitat for Humanity, Teach for America, the Lions’ Club, Meals on Wheels, the Boy Scouts and the Girl Scouts, and most small-town churches — basically any organization whose primary purpose is to foster the web of connection between people and to maintain the society’s culture. Some of the institutions above may lean in the direction of red or blue, but they’re <i>primarily</i> green/white.</Text>\n    </Stack>\n  ),\n  'Simic Combine': (     // UG\n    <Stack>\n      <Text></Text>\n      <Text></Text>\n    </Stack>\n  ),\n  'Orzhov Syndicate': (  // WB\n    <Stack>\n      <Text></Text>\n      <Text></Text>\n    </Stack>\n  ),\n  'Izzet League': (      // UR\n    <Stack>\n      <Text></Text>\n      <Text></Text>\n    </Stack>\n  ),\n  'Cult of Rakdos': (    // BR\n    <Stack>\n      <Text></Text>\n      <Text></Text>\n    </Stack>\n  ),\n  'Boros Legion': (      // WR\n    <Stack>\n      <Text></Text>\n      <Text></Text>\n    </Stack>\n  ),\n  'Bant Shard': (        // WUG\n    <Stack>\n      <Text></Text>\n      <Text></Text>\n    </Stack>\n  ),\n  'Esper Shard': (       // WUB\n    <Stack>\n      <Text></Text>\n      <Text></Text>\n    </Stack>\n  ),\n  'Grixis Shard': (      // UBR\n    <Stack>\n      <Text></Text>\n      <Text></Text>\n    </Stack>\n  ),\n  'Jund Shard': (        // BRG\n    <Stack>\n      <Text></Text>\n      <Text></Text>\n    </Stack>\n  ),\n  'Naya Shard': (        // WRG\n    <Stack>\n      <Text></Text>\n      <Text></Text>\n    </Stack>\n  ),\n  'Jeskai Way': (        // WUR\n    <Stack>\n      <Text></Text>\n      <Text></Text>\n    </Stack>\n  ),\n  'Sultai Brood': (      // UBG\n    <Stack>\n      <Text></Text>\n      <Text></Text>\n    </Stack>\n  ),\n  'Mardu Horde': (       // WBR\n    <Stack>\n      <Text></Text>\n      <Text></Text>\n    </Stack>\n  ),\n  'Temur Frontier': (    // URG\n    <Stack>\n      <Text></Text>\n      <Text></Text>\n    </Stack>\n  ),\n  'Abzan Houses': (      // WBG\n    <Stack>\n      <Text></Text>\n      <Text></Text>\n    </Stack>\n  ),\n  'Artifice': (          // WUBR\n    <Stack>\n      <Text></Text>\n      <Text></Text>\n    </Stack>\n  ),\n  'Growth': (            // WUBG\n    <Stack>\n      <Text></Text>\n      <Text></Text>\n    </Stack>\n  ),\n  'Altruism': (          // WURG\n    <Stack>\n      <Text></Text>\n      <Text></Text>\n    </Stack>\n  ),\n  'Aggression': (        // WBRG\n    <Stack>\n      <Text></Text>\n      <Text></Text>\n    </Stack>\n  ),\n  'Chaos': (             // UBRG\n    <Stack>\n      <Text></Text>\n      <Text></Text>\n    </Stack>\n  ),\n  'WUBRG': (\n    <Stack>\n      <Text></Text>\n      <Text></Text>\n    </Stack>\n  ),\n}","import { Image } from '@chakra-ui/image'\nimport { Heading, Stack, Text } from '@chakra-ui/react'\nimport { useEffect, useState, useCallback } from 'react'\nimport { connect } from 'react-redux'\nimport { capitalize } from './util'\nimport {\n  masks as combos, descriptions\n} from './data/combos'\nimport { colors as order } from './data/order'\nimport Chart from './Chart'\n\nconst Results = ({ weights }) => {\n  const [icons, setIcons] = useState()\n  const load = useCallback(async () => {\n    const icons = {}\n    for(let combo of Object.values(combos)) {\n      icons[combo] = (await import(`./icons/${combo}.svg`)).default\n    }\n    setIcons(icons)\n  }, [])\n\n  useEffect(() => load(), [load])\n\n  const [mask, setMask] = useState()\n  const name = combos[mask]\n  const update = useCallback(() => {\n    const maxWeight = Math.max(...Object.values(weights))\n    const position = {}\n    if(maxWeight >= 0.4) { // Colorless if all ≤ 40%\n      Object.entries(weights).forEach(([color, weight]) => {\n        if(weight / maxWeight >= 0.8) { // score is ≥ 80% of max\n          position[color] = weight\n        }\n      })\n    }\n\n    const mask = parseInt(\n      order.map(c => position[c] ? '1' : '0').join(''),\n      2\n    )\n    setMask(mask)\n  }, [weights])\n\n  useEffect(() => update(), [update])\n\n  return (\n    <Stack\n      align='center' justify='center'\n    >\n      <Heading pb={5}>{name}</Heading>\n      <Stack direction='row'>\n        {icons && (\n          <Stack direction='column' align='center'>\n            <object\n              alt={name} data={icons[name]}\n              style={{ height: '40vh', width: '40vh' }}\n            />\n            <Stack direction='row'>\n              {order.map((c, i) => (mask & (1 << order.length - i - 1)) ? (\n                <object\n                  key={c} data={icons[capitalize(c)]}\n                  style={{ height: '10vh', width: '10vh'  }}\n                />\n              ) : ( null ))}\n            </Stack>\n            <Chart maxH='50vh'/>\n          </Stack>\n        )}\n        <Stack maxW='25rem'>\n          {descriptions[name]}\n        </Stack>\n      </Stack>\n    </Stack>\n  )\n}\n\n\nexport default connect(\n  (state) => {\n    const { weights } = state\n    return { weights }\n  },\n)(Results)","// From: https://github.com/Jerdle-code/color-pie-test/blob/main/script.js\n// BSD 2-Clause License\n// Copyright (c) 2021, Daniel Amdurer\nexport default [\n  {\n      position: \"Regulations are important because technological advancement moves faster than our ability to use it effectively and safely.\",\n      high: 'white',\n      low: 'blue',\n  },\n  {\n      position: \"Wealth should be distributed based on need rather than merit.\",\n      high: 'white',\n      low: 'black',\n  },\n  {\n      position: \"Some amount of conformity is necessary for people to work well together.\",\n      high: 'white',\n      low: 'red',\n  },\n  {\n      position: \"Traditions that aren't sufficiently humane or ethically acceptable ought to be discarded.\",\n      high: 'white',\n      low: 'green',\n  },\n  {\n      position: \"A good system is one that is constantly improving. Staying the same almost always means falling behind.\",\n      high: 'blue',\n      low: 'white',\n  },\n  {\n      position: \"I don't need others to recognize the value of my work. Improvement is its own reward.\",\n      high: 'blue',\n      low: 'black',\n  },\n  {\n      position: \"People should think through things before they act, and look before they leap.\",\n      high: 'blue',\n      low: 'red',\n  },\n  {\n      position: \"We should never be content with what we have now. We should always seek to improve.\",\n      high: 'blue',\n      low: 'green',\n  },\n  {\n      position: \"The fruits of my labor belong to me first and foremost. What I choose to do with them is my decision.\",\n      high: 'black',\n      low: 'white',\n  },\n  {\n      position: \"All the work I do should be in pursuit of a practical goal. Anything beyond that is wasted effort.\",\n      high: 'black',\n      low: 'blue',\n  },\n  {\n      position: \"Success is more important than being true to yourself.\",\n      high: 'black',\n      low: 'red',\n  },\n  {\n      position: \"There's no such thing as something being made for you. If you want something, go get it.\",\n      high: 'black',\n      low: 'green',\n  },\n  {\n      position: \"I am my own person, and I'm not going to change just to please others or get along.\",\n      high: 'red',\n      low: 'white',\n  },\n  {\n      position: \"I do things my way, even if they seem less effective on paper.\",\n      high: 'red',\n      low: 'blue',\n  },\n  {\n      position: \"All the success in the world means nothing if I have to abandon my passions.\",\n      high: 'red',\n      low: 'black',\n  },\n  {\n      position: \"The path you take in life is something you should choose for yourself.\",\n      high: 'red',\n      low: 'green',\n  },\n  {\n      position: \"Connection to each other and to our shared past is more important than concerns over ethics and justice.\",\n      high: 'green',\n      low: 'white',\n  },\n  {\n      position: \"It's not in my nature to constantly want to meddle with things or plan for the future. I prefer to exist in the present moment and let things develop.\",\n      high: 'green',\n      low: 'blue',\n  },\n  {\n      position: \"I would prefer to choose a role that suits me rather than constantly chase fame, fortune, or prestige.\",\n      high: 'green',\n      low: 'black',\n  },\n  {\n      position: \"It's important to fill your role in family/society even if it means giving up on your personal dreams.\",\n      high: 'green',\n      low: 'red',\n  },\n  {\n      position: \"In a group setting, it's important to prioritize the overall health of the group above worrying about productivity.\",\n      high: 'white',\n      low: 'blue',\n  },\n  {\n      position: \"Personal morals ought to be upheld at all times, not just when it's convenient to do so.\",\n      high: 'white',\n      low: 'black',\n  },\n  {\n      position: \"When my principles conflict with my personal feelings, I stick to my principles. Emotions can lead people astray.\",\n      high: 'white',\n      low: 'red',\n  },\n  {\n      position: \"Humanity is better off with civilization.\",\n      high: 'white',\n      low: 'green',\n  },\n  {\n      position: \"When criticizing someone's work, it's important to point out the flaws, even at the expense of their feelings.\",\n      high: 'blue',\n      low: 'white',\n  },\n  {\n      position: \"I always prefer to spend a lot of time planning up front, rather than trying to react to opportunities as they present themselves.\",\n      high: 'blue',\n      low: 'black',\n  },\n  {\n      position: \"I feel most productive when I am not distracted by emotion and am able to focus my mental energy on the task at hand.\",\n      high: 'blue',\n      low: 'red',\n  },\n  {\n      position: \"A person can mold and shape their own identity however they choose. We are who we choose to become.\",\n      high: 'blue',\n      low: 'green',\n  },\n  {\n      position: \"Morality is just another form of persuasion. There's nothing 'true' or 'objective' about it.\",\n      high: 'black',\n      low: 'white',\n  },\n  {\n      position: \"There is certainly an advantage to having a plan and executing it, but you also have to be ready to change course if something better comes along.\",\n      high: 'black',\n      low: 'blue',\n  },\n  {\n      position: \"Sometimes your heart lies to you, and the most beneficial thing to do is not the thing you want to do.\",\n      high: 'black',\n      low: 'red',\n  },\n  {\n      position: \"I don't feel a strong sense of responsibility to others. Everyone needs to look out for themselves and carry their own weight.\",\n      high: 'black',\n      low: 'green',\n  },\n  {\n      position: \"In a moral dilemma, I go with my gut rather than a personal code.\",\n      high: 'red',\n      low: 'white',\n  },\n  {\n      position: \"Emotions inform and energize my actions. Without them, my life would be without direction and meaning.\",\n      high: 'red',\n      low: 'blue',\n  },\n  {\n      position: \"I would never hurt something or someone dear to me, no matter the reason.\",\n      high: 'red',\n      low: 'black',\n  },\n  {\n      position: \"The best family never asks you to change for them, and doesn't place restrictions on your dreams.\",\n      high: 'red',\n      low: 'green',\n  },\n  {\n      position: \"Utopian dreams that ignore human nature will never succeed.\",\n      high: 'green',\n      low: 'white',\n  },\n  {\n      position: \"Who we are is not something we choose, but rather something we discover and embrace.\",\n      high: 'green',\n      low: 'blue',\n  },\n  {\n      position: \"We live in a web of responsibility that binds us to one another. If one person shirks their duties, everyone suffers.\",\n      high: 'green',\n      low: 'black',\n  },\n  {\n      position: \"A family of mutual support and responsibility, where everyone is accountable to everyone else, is the strongest family of all.\",\n      high: 'green',\n      low: 'red',\n  },\n]","import update from 'immutability-helper'\nimport { createSlice } from '@reduxjs/toolkit'\nimport { configureStore } from '@reduxjs/toolkit'\n\nexport const reducers = {\n  setActive: (state, action) => (\n    update(state, { active: { $set: action.payload } })\n  ),\n  setOrigin: (state, action) => (\n    update(state, { origin: { $set: action.payload } })\n  ),\n  setPosition: (state, { payload: { id, position }}) => (\n    update(state, { positions: { $merge: { [id]: position } } })\n  ),\n  setHandle: (state, { payload: { id, handle }}) => (\n    update(state, { handles: { $merge: { [id]: handle } } })\n  ),\n  setTransform: (state, { payload: { id, transform }}) => (\n    update(state, { transforms: { $merge: { [id]: transform } } })\n  ),\n  setWeight: (state, { payload: { id, weight }}) => (\n    update(state, { weights: { $merge: { [id]: weight } } })\n  ),\n  setWeights: (state, { payload }) => (\n    update(state, { weights: { $set: payload } })\n  ),\n  setConflict: (state, action) => (\n    update(state, { conflict: { $set: action.payload } })\n  ),\n}\n\nconst initialState = {\n  active: undefined,\n  origin: undefined,\n  positions: {},\n  handles: {},\n  transforms: {},\n  weights: {},\n}\nconst positionSlice = createSlice({\n  name: 'pos',\n  initialState,\n  reducers,\n})\n\nexport const store = configureStore({\n  reducer: positionSlice.reducer,\n})\n\n//export const { setActive } = positionSlice.actions\n\nexport const setActive = (type) => (\n  store.dispatch(positionSlice.actions.setActive(type))\n)\nexport const setOrigin = (origin) => (\n  store.dispatch(positionSlice.actions.setOrigin(origin))\n)\nexport const setPosition = (id, position) => {\n  store.dispatch(positionSlice.actions.setPosition({ id, position }))\n}\nexport const setHandle = (id, handle) => {\n  store.dispatch(positionSlice.actions.setHandle({ id, handle }))\n}\nexport const setTransform = (id, transform) => {\n  store.dispatch(positionSlice.actions.setTransform({ id, transform }))\n}\nexport const setWeight = (id, weight) => {\n  store.dispatch(positionSlice.actions.setWeight({ id, weight }))\n}\nexport const setWeights = (weights) => {\n  store.dispatch(positionSlice.actions.setWeights(weights))\n}\nexport const setConflict = (conflict) => (\n  store.dispatch(positionSlice.actions.setConflict(conflict))\n)\n\nexport default positionSlice.reducer","import { connect } from 'react-redux'\nimport { useEffect, useState, useCallback } from 'react'\nimport {\n  Flex, Stack, VStack, Box, Spinner, Button, ButtonGroup, Text,\n} from '@chakra-ui/react'\nimport {\n  ArrowBackIcon, ArrowForwardIcon, ArrowUpIcon, ArrowDownIcon,\n} from '@chakra-ui/icons'\nimport { useParams } from 'react-router'\nimport { useLocation } from 'react-router-dom'\nimport Chart from '../Chart'\nimport Results from '../Results'\nimport { BigInt, atob, btoa, defZero } from '../util'\nimport ments from '../data/statements'\nimport { colors as order } from '../data/order'\nimport './index.scss'\nimport { setWeights } from '../Reducer'\n\n// mapping of responses to an octal-representable number\nconst storageMap = {\n  0: undefined, 1: -2, 2: -1, 3: 0, 4: 1, 5: 2, 6: null,\n}\n\nconst Test = ({ history }) => {\n  const [statements, setStatements] = useState(ments)\n  const [maxes, setMaxes] = useState()\n  const [index, setIndex] = useState(0)\n  const [showing, setShowing] = useState(true)\n\n  const { answers = '' } = useParams()\n  const load = () => {\n    if(answers === '') {\n      {/* ToDo: Fix this so it clears the responses when\n        * /test (w/o args) is navigated to. */}\n      statements.forEach(\n        r => r.response = undefined\n      )\n    } else {\n      let max, idx = 0\n      for(\n        let packed = atob(answers),\n        num = packed.toString(2).length,\n        off = (Math.ceil(num / 3) - 1) * 3;\n        packed > 0 && idx < statements.length;\n        idx++, off -= 3\n      ) {\n        let bits = (packed & (BigInt(0b111) << BigInt(off))) >> BigInt(off)\n        const stored = parseInt(bits)\n        const res = storageMap[stored]\n        statements[idx].response = res\n        if(max === undefined && res === undefined) {\n          max = idx\n        }\n      }\n      setIndex(max ?? idx)\n    }\n    setStatements(statements)\n    const maxes = new Proxy({}, defZero)\n    statements.forEach((s) => {\n      maxes[s.low] += 2\n      maxes[s.high] += 2\n    })\n    setMaxes(maxes)\n  }\n\n  useEffect(load, [])\n\n  const update = () => {\n    if(!maxes) return\n\n    const current = new Proxy({}, defZero)\n    statements.forEach(q => {\n      if(q.response !== undefined) {\n        if(q.response < 0) {\n          current[q.low] += Math.abs(q.response)\n        } else if(q.response > 0) {\n          current[q.high] += Math.abs(q.response)\n        } else if(q.response === null) {\n          // do nothing for \"don't care\"\n        } else if(q.response === 0) {\n          current[q.low] += 1\n          current[q.high] += 1\n        }\n      }\n    })\n\n    setWeights(\n      Object.fromEntries(\n        order.map(\n          c => [c, (current[c] ?? 0) / maxes[c]] // normalized\n        )\n      )\n    )\n  }\n    \n  useEffect(update, [statements, maxes])\n\n  const location = useLocation()\n  const answer = (res) => {\n    const change = [...statements]\n    change[index].response = res\n    let storage = 0n\n    change.forEach((s) => {\n      const res = (\n        Object.entries(storageMap).find(\n          ([_, val]) => val === s.response\n        )?.[0]\n      )\n      storage = (storage << 3n) | BigInt(res)\n    })\n    const path = (\n      location.pathname.replace(/(\\/[^/]+)\\/?.*/, '$1')\n    )\n    try {\n      history.push(`${path}/${btoa(storage)}`)\n    } catch(err) { /* duplicate */ }\n    setStatements(change)\n    setIndex(index + 1)\n  }\n\n  const timents = {\n    'Strongly Disagree': { points: -2, color: 'red' },\n    'Disagree': { points: -1, color: 'pink' },\n    'Ambivalent': { points: 0, color: 'blue' },\n    'Agree': { points: 1, color: 'teal' },\n    'Strongly Agree': { points: 2, color: 'green' },\n  }\n  const Sentiments = () => (\n    <Stack direction={['column', 'row']}>\n      {Object.entries(timents)\n        .map(([timent, { points, color }]) => (\n          <Button\n            key={color}\n            isActive={statements[index]?.response === points}\n            colorScheme={color}\n            onClick={() => answer(points)}\n          >{timent}</Button>\n        ))\n      }\n    </Stack>\n  )\n\n  const Navigation = () => (\n    <Stack align='center'>\n      <ButtonGroup pt={5}>\n        <Button\n          isDisabled={index === 0}\n          colorScheme='purple'\n          leftIcon={<ArrowBackIcon/>}\n          onClick={() => setIndex(index - 1)}\n        >Back</Button>\n        <Button\n          index={index}\n          isDisabled={index >= statements.length}\n          colorScheme='purple'\n          rightIcon={<ArrowForwardIcon/>}\n          onClick={() => answer(null)}\n        >No Opinion</Button>\n      </ButtonGroup>\n    </Stack>\n  )\n\n  const ColorBar = ({ from, to }) => (\n    <Box id='colors'\n      style={{\n        background: `linear-gradient(\n          to right, ${from}, ${to}\n        )`\n      }}\n      className={``}\n    ></Box>\n  )\n\n  if(!maxes) {\n    return (\n      <Stack align='center' pt={10}>\n        <Box>Processing Statements…</Box>\n        <Spinner/>\n      </Stack>\n    )\n  }\n\n  const Statement = ({ positon }) => (\n    <Box\n      maxW={['20rem', '40rem']}\n      minH={['6rem', '3rem']}\n      ml={['3rem', 0]}\n    >\n      <Text textAlign='justify'>\n        <q>{statements[index].position}</q>\n      </Text>\n    </Box>\n  )\n\n  const GetResult = () => (\n    <Button\n      title='Skip To Results'\n      h='auto'\n      w='2rem'\n      onClick={() => setIndex(statements.length)}\n    ><ArrowForwardIcon/></Button>\n  )\n\n  return (\n    <Stack className={!showing && 'imageOnly'}>\n      <Flex as='nav' key='head'>\n        {statements.map((s, i) => (\n          <span key={i}\n            title={`Position #${i + 1}: ${s.position}`}\n            onClick={() => setIndex(i)}\n            style={{\n              background: ((() => {\n                if(index === i) return 'yellow'\n                if(s.response < 0) return s.low\n                if(s.response > 0) return s.high\n                if(s.response === 0) return 'orange'\n                if(s.response === null) return 'cyan'\n                return 'transparent'\n              })()),\n              filter: `brightness(\n                ${Math.abs(s.response) === 1 ? '75%' : '100%'}\n              )`\n            }}\n          ></span>\n        ))}\n      </Flex>\n      {!statements[index]\n        ? (\n          <Results/>\n        ) : (\n          <Flex direction='column' align='center'>\n            <Stack direction='row'>\n              <Stack pt={5} id='statements'>\n                <Statement positon={statements[index].position}/>\n                {/* ToDo: Make 100% width on mobile, preserving button width */}\n                <ColorBar\n                  from={statements[index].low}\n                  to={statements[index].high}\n                />\n                <Sentiments/>\n                <Navigation/>\n              </Stack>\n              <GetResult/>\n            </Stack>\n            <Button\n              title={`${showing ? 'Hide' : 'Show'} Position`}\n              maxH='1rem'\n              minW='50%'\n              margin='1rem auto'\n              onClick={() => setShowing(s => !s)}\n            >{showing ? <ArrowUpIcon/> : <ArrowDownIcon/>}</Button>\n            <Chart key='chart'/>\n          </Flex>\n        )\n      }\n    </Stack>\n  )\n}\n\nexport default connect(\n  (state) => {\n    const { weights } = state\n    return { weights }\n  },\n)(Test)","import { chakra } from '@chakra-ui/react'\nimport './index.scss'\n\nconst SVG = chakra('svg', {\n  baseStyle: {\n    maxH: '100vh',\n  },\n})\n\nexport default () => (\n  <SVG\n    xmlns=\"http://www.w3.org/2000/svg\"\n    viewBox=\"0 0 164 159\"\n  >\n    <defs>\n      <circle id=\"target\" r=\"5%\">\n        <animate attributeType=\"XML\" attributeName=\"r\" \n          dur=\"1s\" repeatCount=\"indefinite\" \n          from=\"6%\" to=\".5%\"/>\n        <animate attributeType=\"CSS\" attributeName=\"stroke-width\" \n          calcMode=\"paced\" dur=\"1s\"\n          from=\"2\" to=\"0.5\" repeatCount=\"indefinite\"/>\n        <animate attributeType=\"CSS\" attributeName=\"stroke\" \n          dur=\"1s\" from=\"red\" to=\"orange\" repeatCount=\"indefinite\"/>\n        <animate attributeType=\"CSS\" attributeName=\"opacity\" \n          calcMode=\"paced\" dur=\"1s\"\n          from=\"0\" to=\"1\" repeatCount=\"indefinite\"/>\n      </circle>\n    </defs>\n    <title>MTG Five Color Combinations</title>\n    <g id='circles' transform=\"translate(-22.216 -55.357)\">\n      <path d=\"m126.23 84.316a61.793 61.793 0 0 1 35.788 79.694 61.793 61.793 0 0 1-79.672 35.838 61.793 61.793 0 0 1-35.888-79.649 61.793 61.793 0 0 1 79.626-35.938\"/>\n      <path d=\"m119 103.75a41.06 41.06 0 0 1 23.78 52.955 41.06 41.06 0 0 1-52.94 23.813 41.06 41.06 0 0 1-23.846-52.925 41.06 41.06 0 0 1 52.91-23.88\"/>\n      <path d=\"m111.59 122.82a20.336 20.336 0 0 1 11.778 26.227 20.336 20.336 0 0 1-26.22 11.794 20.336 20.336 0 0 1-11.811-26.212 20.336 20.336 0 0 1 26.205-11.827\"/>\n    </g>\n    <g transform=\"translate(-22.216 -55.357)\">\n      <g>\n        <rect className='blue bar' transform=\"matrix(-.93819 .34613 .34613 .93819 0 0)\" x=\"-27.982\" y=\"168.69\" width=\"43.49\" height=\"1.3198\"/>\n        <rect className='red bar' transform=\"matrix(-.57907 .81528 .81528 .57907 0 0)\" x=\"-8.3933\" y=\"166.51\" width=\"43.49\" height=\"1.3198\"/>\n        <rect className='black bar' transform=\"rotate(55.035)\" x=\"112.9\" y=\"-4.719\" width=\"43.49\" height=\"1.3198\"/>\n        <rect className='white bar' transform=\"rotate(90.107)\" x=\"161.62\" y=\"-105.2\" width=\"43.49\" height=\"1.3198\"/>\n        <rect className='green bar' transform=\"rotate(20.251)\" x=\"167.63\" y=\"96.578\" width=\"43.49\" height=\"1.3198\"/>\n        <rect className='blue bar' transform=\"matrix(-.93819 .34613 .34613 .93819 0 0)\" x=\"-134.18\" y=\"169.24\" width=\"43.49\" height=\"1.3198\"/>\n        <rect className='red bar' transform=\"matrix(-.57907 .81528 .81528 .57907 0 0)\" x=\"96.601\" y=\"167.17\" width=\"43.49\" height=\"1.3198\"/>\n        <rect className='black bar' transform=\"rotate(55.035)\" x=\"215.77\" y=\"-4.6557\" width=\"43.49\" height=\"1.3198\"/>\n        <rect className='green bar' transform=\"rotate(20.251)\" x=\"63.553\" y=\"96.965\" width=\"43.49\" height=\"1.3198\"/>\n        <rect className='white bar' transform=\"rotate(90.107)\" x=\"58.829\" y=\"-105.16\" width=\"43.49\" height=\"1.3198\"/>\n      </g>\n      <g className='partition' id='WUBRG'>\n        <g transform=\"translate(-.75238 9.3577)\">\n          <path className='red' d=\"m105.26 137.21a4.5883 4.5883 0 0 1-4.295-3.0248l4.3137-1.5635z\"/>\n          <path className='black' d=\"m109.6 134.2a4.5883 4.5883 0 0 1-4.2979 3.0086l-0.01-4.5883z\"/>\n          <path className='blue' transform=\"rotate(-69.691)\" d=\"m-83.428 145.93a4.5883 4.5883 0 0 1-4.4317 3.4371l-0.0098-4.5883z\"/>\n          <path className='green' transform=\"rotate(140.34)\" d=\"m7.9105-167.74a4.5883 4.5883 0 0 1-4.6592 2.9951l0.35144-4.5748z\"/>\n          <path className='white' transform=\"rotate(214.41)\" d=\"m-157.52-48.348a4.5883 4.5883 0 0 1-4.2979 3.0085l-0.01-4.5883z\"/>\n        </g>\n        <text><tspan x=\"104.52714\" y=\"149.84612\" textAnchor=\"middle\">WUBRG</tspan></text>\n      </g>\n      <g className='partition' id='Aggression'>\n        <g transform=\"translate(-2.2915 1.5732)\">\n          <path className='red' d=\"m89.116 151.8a4.5883 4.5883 0 0 1-5.8731-2.7517l4.3137-1.5635z\"/>\n          <path className='black' transform=\"rotate(-38.484)\" d=\"m-18.89 171.42a4.5883 4.5883 0 0 1-5.886 2.7286l1.5782-4.3084z\"/>\n          <path className='green' transform=\"rotate(140.34)\" d=\"m31.038-167.88a4.5883 4.5883 0 0 1-5.8751 2.7326l1.5673-4.3123z\"/>\n          <path className='white' transform=\"rotate(230.85)\" d=\"m-165.38-23.648a4.5883 4.5883 0 0 1-5.6774 2.7994l1.3696-4.3791z\"/>\n        </g>\n        <text><tspan x=\"88.826691\" y=\"157.08694\" textAnchor=\"end\">Aggression</tspan></text>\n      </g>\n      <g className='partition' id='Altruism'>\n        <g transform=\"matrix(-.64542 .76383 .76383 .64542 44.502 -44.454) rotate(4.0434 112.45 301.65)\">\n          <path className='red' d=\"m89.116 151.8a4.5883 4.5883 0 0 1-5.8731-2.7517l4.3137-1.5635z\"/>\n          <path className='blue' transform=\"rotate(-38.484)\" d=\"m-18.837 171.27a4.5883 4.5883 0 0 1-2.2939 2.73 4.5883 4.5883 0 0 1-3.556 0.26302l1.4662-4.3478z\"/>\n          <path className='white' transform=\"rotate(140.34)\" d=\"m31.038-167.88a4.5883 4.5883 0 0 1-5.8751 2.7326l1.5673-4.3123z\"/>\n          <path className='green' transform=\"rotate(230.85)\" d=\"m-165.38-23.648a4.5883 4.5883 0 0 1-5.6774 2.7994l1.3696-4.3791z\"/>\n        </g>\n        <text><tspan x=\"94.016281\" y=\"132.82716\" textAnchor=\"middle\">Altruism</tspan></text>\n      </g>\n      <g className='partition' id='Growth'>\n        <g transform=\"rotate(141.57 111.1 138.72) rotate(4.0434 112.45 301.65)\">\n          <path className='white' d=\"m89.116 151.8a4.5883 4.5883 0 0 1-5.8731-2.7517l4.3137-1.5635z\"/>\n          <path className='green' transform=\"rotate(-38.484)\" d=\"m-18.837 171.27a4.5883 4.5883 0 0 1-2.2939 2.73 4.5883 4.5883 0 0 1-3.556 0.26302l1.4662-4.3478z\"/>\n          <path className='blue' transform=\"rotate(140.34)\" d=\"m31.038-167.88a4.5883 4.5883 0 0 1-5.8751 2.7326l1.5673-4.3123z\"/>\n          <path className='black' transform=\"rotate(230.85)\" d=\"m-165.38-23.648a4.5883 4.5883 0 0 1-5.6774 2.7994l1.3696-4.3791z\"/>\n        </g>\n        <text><tspan x=\"115.37243\" y=\"132.5842\" textAnchor=\"middle\">Growth</tspan></text>\n      </g>\n      <g className='partition' id='Artifice'>\n        <g transform=\"rotate(217.22 111.57 143.42) rotate(4.0434 112.45 301.65)\">\n          <path className='blue' d=\"m89.116 151.8a4.5883 4.5883 0 0 1-5.8731-2.7517l4.3137-1.5635z\"/>\n          <path className='red' transform=\"rotate(-38.484)\" d=\"m-18.837 171.27a4.5883 4.5883 0 0 1-2.2939 2.73 4.5883 4.5883 0 0 1-3.556 0.26302l1.4662-4.3478z\"/>\n          <path className='black' transform=\"rotate(140.34)\" d=\"m31.038-167.88a4.5883 4.5883 0 0 1-5.8751 2.7326l1.5673-4.3123z\"/>\n          <path className='white' transform=\"rotate(230.85)\" d=\"m-165.38-23.648a4.5883 4.5883 0 0 1-5.6774 2.7994l1.3696-4.3791z\"/>\n        </g>\n        <text><tspan x=\"126.24714\" y=\"156.67242\" textAnchor=\"middle\">Artifice</tspan></text>\n      </g>\n      <g className='partition' id='Chaos'>\n        <g transform=\"rotate(196.95 107.26 152.42) rotate(4.0434 112.45 301.65)\">\n          <g transform=\"translate(8.2708 -4.8021)\">\n            <path className='green' d=\"m89.116 151.8a4.5883 4.5883 0 0 1-5.8731-2.7517l4.3137-1.5635z\"/>\n            <path className='blue' transform=\"rotate(-38.484)\" d=\"m-18.837 171.27a4.5883 4.5883 0 0 1-2.2939 2.73 4.5883 4.5883 0 0 1-3.556 0.26302l1.4662-4.3478z\"/>\n            <path className='black' transform=\"rotate(140.34)\" d=\"m31.038-167.88a4.5883 4.5883 0 0 1-5.8751 2.7326l1.5673-4.3123z\"/>\n            <path className='red' transform=\"rotate(230.85)\" d=\"m-165.38-23.648a4.5883 4.5883 0 0 1-5.6774 2.7994l1.3696-4.3791z\"/>\n          </g>\n        </g>\n        <text><tspan x=\"111.35828\" y=\"169.47418\" textAnchor=\"middle\">Chaos</tspan></text>\n      </g>\n      <g className='partition' id='Esper'>\n        <g transform=\"rotate(141.57 123.78 144.87) rotate(4.0434 112.45 301.65)\">\n          <path className='black' transform=\"rotate(33.468)\" d=\"m157.82 77.772a4.5883 4.5883 0 0 1-4.2998 1.4893 4.5883 4.5883 0 0 1-3.4679-2.9462l4.3137-1.5635z\"/>\n          <path className='blue' transform=\"rotate(-38.484)\" d=\"m-18.659 169.42a4.5883 4.5883 0 0 1-1.8634 4.2103 4.5883 4.5883 0 0 1-4.5798 0.47306l1.8821-4.1845z\"/>\n          <path className='white' transform=\"rotate(230.85)\" d=\"m-166.04-28.017a4.5883 4.5883 0 0 1 0.5745 4.5948 4.5883 4.5883 0 0 1-3.7215 2.7554l-0.49646-4.5614z\"/>\n        </g>\n        <text><tspan x=\"139.82114\" y=\"136.28549\" textAnchor=\"middle\">Esper</tspan></text>\n      </g>\n      <g className='partition' id='Sultai'>\n        <g transform=\"rotate(-58.809 129.64 111.85) rotate(4.0434 112.45 301.65)\">\n          <path className='black' transform=\"rotate(33.468)\" d=\"m157.82 77.772a4.5883 4.5883 0 0 1-4.2998 1.4893 4.5883 4.5883 0 0 1-3.4679-2.9462l4.3137-1.5635z\"/>\n          <path className='blue' transform=\"rotate(-38.484)\" d=\"m-18.659 169.42a4.5883 4.5883 0 0 1-1.8634 4.2103 4.5883 4.5883 0 0 1-4.5798 0.47306l1.8821-4.1845z\"/>\n          <path className='green' transform=\"rotate(230.85)\" d=\"m-166.04-28.017a4.5883 4.5883 0 0 1 0.5745 4.5948 4.5883 4.5883 0 0 1-3.7215 2.7554l-0.49646-4.5614z\"/>\n        </g>\n        <text><tspan x=\"145.07784\" y=\"164.37773\" textAnchor=\"middle\">Sultai</tspan></text>\n      </g>\n      <g className='partition' id='Jund'>\n        <g transform=\"rotate(-72.679 109.77 172.89) rotate(4.0434 112.45 301.65)\">\n          <path className='black' transform=\"rotate(33.468)\" d=\"m157.82 77.772a4.5883 4.5883 0 0 1-4.2998 1.4893 4.5883 4.5883 0 0 1-3.4679-2.9462l4.3137-1.5635z\"/>\n          <path className='red' transform=\"rotate(-38.484)\" d=\"m-18.659 169.42a4.5883 4.5883 0 0 1-1.8634 4.2103 4.5883 4.5883 0 0 1-4.5798 0.47306l1.8821-4.1845z\"/>\n          <path className='green' transform=\"rotate(230.85)\" d=\"m-166.04-28.017a4.5883 4.5883 0 0 1 0.5745 4.5948 4.5883 4.5883 0 0 1-3.7215 2.7554l-0.49646-4.5614z\"/>\n        </g>\n        <text><tspan x=\"82.65567\" y=\"183.77724\" textAnchor=\"middle\">Jund</tspan></text>\n      </g>\n      <g className='partition' id='Grixis'>\n        <g transform=\"rotate(96.582 99.904 173.95) rotate(4.0434 112.45 301.65)\">\n          <path className='black' transform=\"rotate(33.468)\" d=\"m157.82 77.772a4.5883 4.5883 0 0 1-4.2998 1.4893 4.5883 4.5883 0 0 1-3.4679-2.9462l4.3137-1.5635z\"/>\n          <path className='blue' transform=\"rotate(-38.484)\" d=\"m-18.659 169.42a4.5883 4.5883 0 0 1-1.8634 4.2103 4.5883 4.5883 0 0 1-4.5798 0.47306l1.8821-4.1845z\"/>\n          <path className='red' transform=\"rotate(230.85)\" d=\"m-166.04-28.017a4.5883 4.5883 0 0 1 0.5745 4.5948 4.5883 4.5883 0 0 1-3.7215 2.7554l-0.49646-4.5614z\"/>\n        </g>\n        <text><tspan x=\"125.85937\" y=\"183.6033\" textAnchor=\"middle\">Grixis</tspan></text>\n      </g>\n      <g className='partition' id='Temur'>\n        <g transform=\"rotate(-37.797 96.898 198.95) rotate(4.0434 112.45 301.65)\">\n          <path className='red' transform=\"rotate(33.468)\" d=\"m157.82 77.772a4.5883 4.5883 0 0 1-4.2998 1.4893 4.5883 4.5883 0 0 1-3.4679-2.9462l4.3137-1.5635z\"/>\n          <path className='blue' transform=\"rotate(-38.484)\" d=\"m-18.659 169.42a4.5883 4.5883 0 0 1-1.8634 4.2103 4.5883 4.5883 0 0 1-4.5798 0.47306l1.8821-4.1845z\"/>\n          <path className='green' transform=\"rotate(230.85)\" d=\"m-166.04-28.017a4.5883 4.5883 0 0 1 0.5745 4.5948 4.5883 4.5883 0 0 1-3.7215 2.7554l-0.49646-4.5614z\"/>\n        </g>\n        <text><tspan x=\"63.165764\" y=\"164.39967\" textAnchor=\"middle\">Temur</tspan></text>\n      </g>\n      <g className='partition' id='Naya'>\n        <g transform=\"rotate(121.14 87.156 127.95) rotate(4.0434 112.45 301.65)\">\n          <path className='white' transform=\"rotate(33.468)\" d=\"m157.82 77.772a4.5883 4.5883 0 0 1-4.2998 1.4893 4.5883 4.5883 0 0 1-3.4679-2.9462l4.3137-1.5635z\"/>\n          <path className='red' transform=\"rotate(-38.484)\" d=\"m-18.659 169.42a4.5883 4.5883 0 0 1-1.8634 4.2103 4.5883 4.5883 0 0 1-4.5798 0.47306l1.8821-4.1845z\"/>\n          <path className='green' transform=\"rotate(230.85)\" d=\"m-166.04-28.017a4.5883 4.5883 0 0 1 0.5745 4.5948 4.5883 4.5883 0 0 1-3.7215 2.7554l-0.49646-4.5614z\"/>\n        </g>\n        <text><tspan x=\"72.989021\" y=\"136.0551\" textAnchor=\"end\">Naya</tspan></text>\n      </g>\n      <g className='partition' id='Abzan'>\n        <g transform='rotate(-82.349 61.852 131.97)'>\n          <path className='black' transform=\"rotate(33.468)\" d=\"m157.82 77.772a4.5883 4.5883 0 0 1-4.2998 1.4893 4.5883 4.5883 0 0 1-3.4679-2.9462l4.3137-1.5635z\"/>\n          <path className='white' transform=\"rotate(-38.484)\" d=\"m-18.659 169.42a4.5883 4.5883 0 0 1-1.8634 4.2103 4.5883 4.5883 0 0 1-4.5798 0.47306l1.8821-4.1845z\"/>\n          <path className='green' transform=\"rotate(230.85)\" d=\"m-166.04-28.017a4.5883 4.5883 0 0 1 0.5745 4.5948 4.5883 4.5883 0 0 1-3.7215 2.7554l-0.49646-4.5614z\"/>\n        </g>\n        <text><tspan x=\"79.214195\" y=\"116.41006\" textAnchor=\"middle\">Abzan</tspan></text>\n      </g>\n      <g className='partition' id='Bant'>\n        <g transform=\"rotate(-48.11 50.939 117.02) rotate(4.0434 112.45 301.65)\">\n          <path className='white' transform=\"rotate(33.468)\" d=\"m157.82 77.772a4.5883 4.5883 0 0 1-4.2998 1.4893 4.5883 4.5883 0 0 1-3.4679-2.9462l4.3137-1.5635z\"/>\n          <path className='green' transform=\"rotate(-38.484)\" d=\"m-18.659 169.42a4.5883 4.5883 0 0 1-1.8634 4.2103 4.5883 4.5883 0 0 1-4.5798 0.47306l1.8821-4.1845z\"/>\n          <path className='blue' transform=\"rotate(230.85)\" d=\"m-166.04-28.017a4.5883 4.5883 0 0 1 0.5745 4.5948 4.5883 4.5883 0 0 1-3.7215 2.7554l-0.49646-4.5614z\"/>\n        </g>\n        <text><tspan x=\"103.94183\" y=\"108.98739\" textAnchor=\"middle\">Bant</tspan></text>\n      </g>\n      <g className='partition' id='Jeskai'>\n        <g transform=\"matrix(.92202 .38715 .38715 -.92202 -18.084 206.31) rotate(4.0434 112.45 301.65)\">\n          <g transform=\"translate(-1.6747 .4394)\">\n            <path className='white' transform=\"rotate(33.468)\" d=\"m157.82 77.772a4.5883 4.5883 0 0 1-4.2998 1.4893 4.5883 4.5883 0 0 1-3.4679-2.9462l4.3137-1.5635z\"/>\n            <path className='blue' transform=\"rotate(-38.484)\" d=\"m-18.659 169.42a4.5883 4.5883 0 0 1-1.8634 4.2103 4.5883 4.5883 0 0 1-4.5798 0.47306l1.8821-4.1845z\"/>\n            <path className='red' transform=\"rotate(230.85)\" d=\"m-166.04-28.017a4.5883 4.5883 0 0 1 0.5745 4.5948 4.5883 4.5883 0 0 1-3.7215 2.7554l-0.49646-4.5614z\"/>\n          </g>\n        </g>\n        <text><tspan x=\"129.69531\" y=\"116.34969\" textAnchor=\"middle\">Jeskai</tspan></text>\n      </g>\n      <g className='partition' id='Mardu'>\n        <g transform=\"rotate(130.11 92.762 165.99) rotate(4.0434 112.45 301.65)\">\n          <path className='white' transform=\"rotate(33.468)\" d=\"m157.82 77.772a4.5883 4.5883 0 0 1-4.2998 1.4893 4.5883 4.5883 0 0 1-3.4679-2.9462l4.3137-1.5635z\"/>\n          <path className='red' transform=\"rotate(-38.484)\" d=\"m-18.659 169.42a4.5883 4.5883 0 0 1-1.8634 4.2103 4.5883 4.5883 0 0 1-4.5798 0.47306l1.8821-4.1845z\"/>\n          <path className='black' transform=\"rotate(230.85)\" d=\"m-166.04-28.017a4.5883 4.5883 0 0 1 0.5745 4.5948 4.5883 4.5883 0 0 1-3.7215 2.7554l-0.49646-4.5614z\"/>\n        </g>\n        <text><tspan x=\"111.05529\" y=\"190.504\" textAnchor=\"middle\">Mardu</tspan></text>\n      </g>\n      <g className='partition' id='Azorius'>\n        <g transform=\"matrix(.94702 .32117 .32117 -.94702 9.4846 203.42)\">\n          <path className='white' transform=\"rotate(33.468)\" d=\"m157.82 77.772a4.5883 4.5883 0 0 1-6.432 0.47023 4.5883 4.5883 0 0 1-0.54859-6.4258l3.5266 2.9352z\"/>\n          <path className='blue' transform=\"rotate(-38.484)\" d=\"m-21.502 165.66a4.5883 4.5883 0 0 1 2.8325 3.6744 4.5883 4.5883 0 0 1-1.821 4.2671 4.5883 4.5883 0 0 1-4.6127 0.49717l1.8821-4.1845z\"/>\n        </g>\n        <text><tspan x=\"141.59886\" y=\"99.746872\" textAnchor=\"middle\">Azorius</tspan></text>\n      </g>\n      <g className='partition' id='Simic'>\n        <g transform=\"matrix(.96486 -.26276 -.26276 -.96486 58.623 246.09)\">\n          <path className='blue' transform=\"rotate(33.468)\" d=\"m157.82 77.772a4.5883 4.5883 0 0 1-6.432 0.47023 4.5883 4.5883 0 0 1-0.54859-6.4258l3.5266 2.9352z\"/>\n          <path className='green' transform=\"rotate(-38.484)\" d=\"m-21.502 165.66a4.5883 4.5883 0 0 1 2.8325 3.6744 4.5883 4.5883 0 0 1-1.821 4.2671 4.5883 4.5883 0 0 1-4.6127 0.49717l1.8821-4.1845z\"/>\n        </g>\n        <text><tspan x=\"109.75101\" y=\"87.734589\" textAnchor=\"middle\">Simic</tspan></text>\n      </g>\n      <g className='partition' id='Selesnya'>\n        <g>\n          <path className='white' transform=\"matrix(-.093379 .99563 .99563 .093379 0 0)\" d=\"m88.404 80.425a4.5883 4.5883 0 0 1-6.432 0.47023 4.5883 4.5883 0 0 1-0.54859-6.4258l3.5266 2.9352z\"/>\n          <path className='green' transform=\"matrix(-.97557 .21968 .21968 .97557 0 0)\" d=\"m-45.53 100.49a4.5883 4.5883 0 0 1 2.8325 3.6744 4.5883 4.5883 0 0 1-1.821 4.2671 4.5883 4.5883 0 0 1-4.6127 0.49718l1.8821-4.1845z\"/>\n        </g>\n        <text><tspan x=\"66.688622\" y=\"101.44799\" textAnchor=\"middle\">Selesnya</tspan></text>\n      </g>\n      <g className='partition' id='Boros'>\n        <g>\n          <path className='white' transform=\"matrix(.50201 .86486 .86486 -.50201 0 0)\" d=\"m131.5-17.406a4.5883 4.5883 0 0 1-6.432 0.47023 4.5883 4.5883 0 0 1-0.54859-6.4258l3.5266 2.9352z\"/>\n          <path className='red' transform=\"matrix(-.66678 .74525 .74525 .66678 0 0)\" d=\"m60.84 111.15a4.5883 4.5883 0 0 1 2.8325 3.6744 4.5883 4.5883 0 0 1-1.821 4.2671 4.5883 4.5883 0 0 1-4.6127 0.49718l1.8821-4.1845z\"/>\n        </g>\n        <text><tspan x=\"49.726765\" y=\"129.3829\" textAnchor=\"middle\">Boros</tspan></text>\n      </g>\n      <g className='partition' id='Gruul'>\n        <g>\n          <path className='green' transform=\"matrix(.93672 .35007 .35007 -.93672 0 0)\" d=\"m104.12-133.7a4.5883 4.5883 0 0 1-6.432 0.47022 4.5883 4.5883 0 0 1-0.54859-6.4258l3.5266 2.9352z\"/>\n          <path className='red' transform=\"matrix(-.042637 .99909 .99909 .042637 0 0)\" d=\"m162.93 49.092a4.5883 4.5883 0 0 1 2.8325 3.6744 4.5883 4.5883 0 0 1-1.821 4.2671 4.5883 4.5883 0 0 1-4.6127 0.49718l1.8821-4.1845z\"/>\n        </g>\n        <text><tspan x=\"44.100929\" y=\"171.7877\" textAnchor=\"middle\">Gruul</tspan></text>\n      </g>\n      <g className='partition' id='Rakdos'>\n        <g transform=\"matrix(.92202 .38715 .38715 -.92202 -6.161 189.42)\">\n          <path className='black' transform=\"rotate(252.65)\" d=\"m-56.753 96.652a4.5883 4.5883 0 0 1-6.432 0.47023 4.5883 4.5883 0 0 1-0.54859-6.4258l3.5266 2.9352z\"/>\n          <path className='red' transform=\"rotate(180.7)\" d=\"m-105.93-32.501a4.5883 4.5883 0 0 1 2.8325 3.6744 4.5883 4.5883 0 0 1-1.821 4.2671 4.5883 4.5883 0 0 1-4.6127 0.49718l1.8821-4.1845z\"/>\n        </g>\n        <text><tspan x=\"104.40408\" y=\"211.60379\" textAnchor=\"middle\">Rakdos</tspan></text>\n      </g>\n      <g className='partition' id='Izzet'>\n        <g transform=\"matrix(.92202 .38715 .38715 -.92202 -6.161 189.42)\">\n          <path className='blue' transform=\"rotate(106.27)\" d=\"m16.873-142.15a4.5883 4.5883 0 0 1-6.432 0.47023 4.5883 4.5883 0 0 1-0.54859-6.4258l3.5266 2.9352z\"/>\n          <path className='red' transform=\"rotate(34.322)\" d=\"m143.93-36.482a4.5883 4.5883 0 0 1 2.8325 3.6744 4.5883 4.5883 0 0 1-1.821 4.2671 4.5883 4.5883 0 0 1-4.6127 0.49718l1.8821-4.1845z\"/>\n        </g>\n        <text><tspan x=\"137.68175\" y=\"200.42857\" textAnchor=\"middle\">Izzet</tspan></text>\n      </g>\n      <g className='partition' id='Golgari'>\n        <g transform=\"matrix(.92202 .38715 .38715 -.92202 -6.161 189.42)\">\n          <path className='black' transform=\"rotate(217.21)\" d=\"m-68.437 25.024a4.5883 4.5883 0 0 1-6.432 0.47023 4.5883 4.5883 0 0 1-0.54859-6.4258l3.5266 2.9352z\"/>\n          <path className='green' transform=\"rotate(145.25)\" d=\"m-41.447-65.802a4.5883 4.5883 0 0 1 2.8325 3.6744 4.5883 4.5883 0 0 1-1.821 4.2671 4.5883 4.5883 0 0 1-4.6127 0.49718l1.8821-4.1845z\"/>\n        </g>\n        <text><tspan x=\"71.357056\" y=\"200.75182\" textAnchor=\"middle\">Golgari</tspan></text>\n      </g>\n      <g className='partition' id='Dimir'>\n        <g transform=\"matrix(.083185 -.99653 -.99653 -.083185 301.64 263.01)\">\n          <path className='black' transform=\"rotate(33.468)\" d=\"m157.82 77.772a4.5883 4.5883 0 0 1-6.432 0.47023 4.5883 4.5883 0 0 1-0.54859-6.4258l3.5266 2.9352z\"/>\n          <path className='blue' transform=\"rotate(-38.484)\" d=\"m-21.502 165.66a4.5883 4.5883 0 0 1 2.8325 3.6744 4.5883 4.5883 0 0 1-1.821 4.2671 4.5883 4.5883 0 0 1-4.6127 0.49717l1.8821-4.1845z\"/>\n        </g>\n        <text><tspan x=\"163.48483\" y=\"171.2668\" textAnchor=\"middle\">Dimir</tspan></text>\n      </g>\n      <g className='partition' id='Orzhov'>\n        <g transform=\"matrix(-.58943 -.80782 -.80782 .58943 333.01 104.92)\">\n          <path className='white' transform=\"rotate(33.468)\" d=\"m157.82 77.772a4.5883 4.5883 0 0 1-6.432 0.47023 4.5883 4.5883 0 0 1-0.54859-6.4258l3.5266 2.9352z\"/>\n          <path className='black' transform=\"rotate(-38.484)\" d=\"m-21.502 165.66a4.5883 4.5883 0 0 1 2.8325 3.6744 4.5883 4.5883 0 0 1-1.821 4.2671 4.5883 4.5883 0 0 1-4.6127 0.49717l1.8821-4.1845z\"/>\n        </g>\n        <text><tspan x=\"158.04478\" y=\"129.43413\" textAnchor=\"middle\">Orzhov</tspan></text>\n      </g>\n      <g className='partition' id='Green'>\n        <g>\n          <path className='green' d=\"m29.01 109.91a4.7495 4.7495 0 0 1 2.6261 6.1785 4.7495 4.7495 0 0 1-6.1759 2.6323 4.7495 4.7495 0 0 1-2.6386-6.1732 4.7495 4.7495 0 0 1 6.1705-2.6448\"/>\n        </g>\n        <text><tspan x=\"26.594273\" y=\"122.32647\" textAnchor=\"middle\">Green</tspan></text>\n      </g>\n      <g className='partition' id='Red'>\n        <g>\n          <path className='red' d=\"m59.322 205.24a4.7495 4.7495 0 0 1 2.6261 6.1785 4.7495 4.7495 0 0 1-6.1759 2.6323 4.7495 4.7495 0 0 1-2.6386-6.1732 4.7495 4.7495 0 0 1 6.1705-2.6448\"/>\n        </g>\n        <text><tspan x=\"65.481499\" y=\"212.30121\" textAnchor=\"middle\">Red</tspan></text>\n      </g>\n      <g className='partition' id='Black'>\n        <g>\n          <path className='black' d=\"m153.36 205a4.7495 4.7495 0 0 1 2.6261 6.1786 4.7495 4.7495 0 0 1-6.1759 2.6323 4.7495 4.7495 0 0 1-2.6386-6.1732 4.7495 4.7495 0 0 1 6.1706-2.6448\"/>\n        </g>\n        <text><tspan x=\"144.78781\" y=\"210.83403\" textAnchor=\"end\">Black</tspan></text>\n      </g>\n      <g className='partition' id='Blue'>\n        <g>\n          <path className='blue' d=\"m183.13 109.73a4.7495 4.7495 0 0 1 2.6261 6.1785 4.7495 4.7495 0 0 1-6.1759 2.6323 4.7495 4.7495 0 0 1-2.6386-6.1732 4.7495 4.7495 0 0 1 6.1705-2.6448\"/>\n        </g>\n        <text><tspan x=\"181.51454\" y=\"122.67811\" textAnchor=\"middle\">Blue</tspan></text>\n      </g>\n      <g className='partition' id='White'>\n        <g>\n          <path className='white' d=\"m106.14 55.836a4.7495 4.7495 0 0 1 2.6261 6.1785 4.7495 4.7495 0 0 1-6.1759 2.6323 4.7495 4.7495 0 0 1-2.6386-6.1732 4.7495 4.7495 0 0 1 6.1705-2.6448\"/>\n        </g>\n        <text><tspan x=\"106.52623\" y=\"67.853714\" textAnchor=\"start\">White</tspan></text>\n      </g>\n    </g>\n  </SVG>\n)","import { useEffect, useState, useRef, useMemo } from 'react'\nimport { connect } from 'react-redux'\nimport {\n  setActive, setOrigin, setHandle as setNormHandle,\n  setTransform, setConflict,\n} from '../Reducer'\nimport { reasons } from '../data/order'\nimport { toDeg } from '../util'\n\nexport const bounds = {\n  x: { min: -400, max: 400 },\n  y: { min: -250, max: 150 },\n}\nexport const extents = {\n  x: Math.abs(bounds.x.min) + Math.abs(bounds.x.max),\n  y: Math.abs(bounds.y.min) + Math.abs(bounds.y.max),\n}\n\nexport const Side = ({\n  rot = 0, shrink = 0.9, colors = ['black', 'black'],\n  r, l, positions, handles, transforms\n}) => {\n  const id = useMemo(\n    () => `${colors[0]}-${colors[1]}`,\n    [colors]\n  )\n  const position = positions[id]\n  const transform = transforms[id]\n  const normHandle = handles[id] ?? { x: 0, y: 0 }\n  const x = { 1: -l / 2 * shrink, 2: l / 2 * shrink }\n  const toEdge = Math.sqrt(Math.abs((l / 2) ** 2 - r ** 2))\n  const [handle, setHandle] = useState({ x: 0, y: 0 })\n  const mouseDown = (evt) => {\n    const conflict = reasons[id]\n    // setOrigin({ x: evt.clientX, y: evt.clientY })\n    setActive(id)\n    setConflict({\n      left: { color: colors[0], text: conflict.left },\n      right: { color: colors[1], text: conflict.right },\n    })\n  }\n  const handleRef = useRef()\n  const svg = (\n    handleRef.current?.closest('svg')\n    || document.querySelector('svg')\n  )\n  const pointFor = (pos) => {\n    if(svg) {\n      const p = svg.createSVGPoint()\n      p.x = pos.x\n      p.y = pos.y\n      return p\n    }\n  }\n  const matrixFor = (mat) => {\n    if(svg) {\n      const m = svg.createSVGMatrix()\n      Object.keys(mat).forEach((attr) => {\n        m[attr] = mat[attr]\n      })\n      return m\n    }\n  }\n\n  // const trans = () => {\n  //   if(svg) {\n  //     const { a, b, c, d, e, f } = (\n  //       handleRef.current\n  //       .getScreenCTM()\n  //       .inverse()\n  //       .multiply(\n  //         svg.getScreenCTM()\n  //       )\n  //     )\n  //     setTransform(id, { a, b, c, d, e, f })\n  //   }\n  // }\n  // useEffect(trans, [id, svg])\n\n  // useEffect(() => {\n  //   setNormHandle(id, { x: 0, y: 0.325 })\n  //   setHandle({ x: 0, y: 0 })\n  // }, [])\n\n  const repos = () => {\n    if(!position || !transform) {\n      return\n    } else if(!handleRef.current) {\n      console.warn('No Handle!')\n    } else {\n      const p = pointFor(position)\n      const trans = matrixFor(transform)\n      const { x, y } = p.matrixTransform(trans)\n      const bounded = {\n        x: Math.min(Math.max(x, bounds.x.min), bounds.x.max),\n        y: Math.min(Math.max(y, bounds.y.min), bounds.y.max),\n      }\n      const norm = {\n        x: -1 + 2.0 * (bounded.x - bounds.x.min) / extents.x,\n        y: 1 - (bounded.y - bounds.y.min) / extents.y,\n      }\n      setHandle(bounded)\n      setNormHandle(id, norm)\n    }\n  }\n  //useEffect(repos, [position, transform])\n\n  return (\n    <>\n      <defs>\n        <linearGradient id={id}\n          gradientUnits='userSpaceOnUse' // required for vertical lines\n          x1={x[1]} y1={0} x2={x[2]} y2={0}\n        >\n          <stop offset='5%' stopColor={colors[0]}/>\n          <stop offset='95%' stopColor={colors[1]}/>\n        </linearGradient>\n      </defs>\n      <g className='side '\n        transform={`\n          translate(0, -${toEdge})\n          rotate(${toDeg(rot)} 0 ${toEdge})\n        `}\n        onMouseDown={mouseDown}\n        ref={handleRef}\n      >\n        <g\n          // ToDo: figure out why this is sometimes undefined\n          transform={`translate(0, ${handle?.y ?? 0})`}\n        >\n          <line className='bg'\n            x1={x[1]} y1={0}\n            x2={x[2]} y2={0}\n            markerStart={`url(#blackarrow)`}\n            markerEnd={`url(#blackarrow)`}\n          />\n          <line\n            x1={x[1]} y1={0}\n            x2={x[2]} y2={0}\n            stroke={`url(#${id})`}\n            // the arrow markers are defined in the chart\n            markerStart={`url(#${colors[0]}arrow)`}\n            markerEnd={`url(#${colors[1]}arrow)`}\n          />\n          <g className='handle'>\n            <circle\n              cx={handle.x} cy={0} r={r / 10}\n              style={{\n                fillOpacity: (\n                  0.5 * normHandle.y ?? 0\n                ),\n              }}\n            />\n            <circle\n              cx={handle.x} cy={0} r={r / 25}\n              style={{\n                fill: colors[0],\n                fillOpacity: 1 - (1 + normHandle.x) / 2,\n              }}\n            />\n            <circle\n              cx={handle.x} cy={0} r={r / 30}\n              style={{\n                fill: colors[1],\n                fillOpacity: (1 + normHandle.x) / 2,\n              }}\n            />\n          </g>\n        </g>\n      </g>\n    </>\n  )\n}\n\nexport default connect(\n  (state) => {\n    const {\n      active, origin, positions, handles, transforms\n    } = state\n    return { active, origin, positions, handles, transforms }\n  },\n)(Side)","import { useEffect, useState } from 'react'\nimport { connect } from 'react-redux'\nimport { conflicts as order, colors } from '../data/order'\n\n// Converts a set of normalized handles for conflicts\n// (-1≤x≤1; 0≤y≤1) into a set of weights for the different\n// colors\nexport const normsToWeights = (handles) => {\n  const weights = {}\n  const defined = n => n !== undefined\n  if(Object.values(handles).filter(defined).length > 0) {\n    // order the normalized scores\n    const norms = Object.fromEntries(\n      order\n      .map((id) => (\n        !handles[id] ? undefined : [id, handles[id]]\n      ))\n      .filter(defined)\n    )\n\n    const axes = Object.keys(norms)\n    const scores = Object.values(norms)\n    for(let idx = 1; idx <= scores.length; idx++) {\n      const p1 = scores[(idx + scores.length - 2) % scores.length]\n      const p2 = scores[(idx + 1) % scores.length]\n      let l = 0.05 // minimum size\n      const portance = (p1.y + p2.y) / 2 // mean of distance from center\n      const viction = (p2.x + -p1.x) / 2\n      l += 0.7 * portance\n      l += 0.25 * viction\n      const color = axes[(idx + 1) % scores.length].split('-')[0]\n      weights[color] = l\n    }\n  }\n  return weights\n}\n\nconst Linkages = ({\n  handles, size,\n}) => {\n  const [polygon, setPolygon] = useState()\n  const r = size / 2 // radius for polar coordinates\n\n  const plot = () => {\n    const offset = 3 * Math.PI / 10\n    const arc = 2 * Math.PI / 5\n    const points = (\n      Object.values(normsToWeights(handles)).map((w, idx) => {\n        const theta = offset + idx * arc\n        return {\n          x: r * w * Math.cos(theta),\n          y: r * w * Math.sin(theta),\n        }\n      })\n    )\n    points.reverse()\n    ;(points.length > 0) && setPolygon(points)\n  }\n  useEffect(plot, [plot, handles, r])\n\n  return (\n    (!polygon ? null : (\n      <>\n        {polygon.map((point, idx) => {\n          const color = colors[idx]\n          \n          return (\n            <g key={idx} className='link'>\n              <circle className='joint'\n                cx={point.x} cy={point.y}\n                fill={color} stroke={color}\n                strokeWidth={5}\n                strokeOpacity='0.25'\n                fillOpacity='0.5'\n                r={25}\n              />\n            </g>\n          )\n        })}\n        <polygon\n          points={polygon.map(p => `${p.x},${p.y}`).join(' ')}\n          stroke='black' fill='white' fillOpacity={0.5}\n        />\n      </>\n    )\n  ))\n}\n\nexport default connect(\n  (state) => {\n    const { handles, transforms } = state\n    return { handles, transforms }\n  },\n)(Linkages)","import {\n  useRef, useMemo, useState, useEffect, useCallback,\n} from 'react'\nimport {\n  chakra, Box, Heading, Spacer, Stack, Text,\n} from '@chakra-ui/react'\nimport { connect } from 'react-redux'\nimport {\n  setActive, setConflict, setPosition\n} from '../Reducer'\nimport Side from './Side'\nimport Linkages from './Linkages'\nimport './index.scss'\nimport { names } from '../data/order'\n\n// needed b/c dynamic loading is failing\nimport Ambition from '../icons/MetaGame/Ambition.svg'\nimport Balance from '../icons/MetaGame/Balance.svg'\nimport Chaos from '../icons/MetaGame/Chaos.svg'\nimport Justice from '../icons/MetaGame/Justice.svg'\nimport Wisdom from '../icons/MetaGame/Wisdom.svg'\n\nexport { normsToWeights } from './Linkages'\n\nconst SVG = chakra('svg', {\n  baseStyle: {\n    maxH: 'calc(100vh - 3.75rem)',\n  },\n})\n\n// draw a five pointed star inscribed in a circle\nconst Sliders = ({ active, conflict }) => {\n  const [images, setImages] = useState()\n  const r = 500 // the radius of the circle\n  // the length of the star's sides\n  const l = r * Math.sin(4 * Math.PI / 5) / Math.sin(Math.PI / 10)\n  const d = r * 0.75 // distance out to place icons\n  const svg = useRef()\n\n  const pointFor = (pos) => {\n    if(svg.current) {\n      const p = svg.current.createSVGPoint()\n      p.x = pos.x\n      p.y = pos.y\n      return p\n    }\n  }\n\n  const load = useCallback(async () => {\n    try {\n      const images = {}\n      for(let name of Object.values(names)) {\n        // const path = `../icons/MetaGame/${name}.svg`\n        const path = `./../icons/Red.svg`\n        images[name] = (await import(path)).default\n      }\n      setImages(images)\n    } catch(err) {\n      console.warn(\"Couldn't Load Images\", err)\n      setImages({\n        Ambition, Balance, Chaos, Justice, Wisdom,\n      })\n    }\n  }, [names])\n\n  useEffect(() => load(), [load])\n  \n  const BgImage = ({ x = 0, y = 0, name }) => (\n    <g className={`bg ${name.toLowerCase()}`}\n      transform={`translate(${x - (r / 4)}, ${y - (r / 4)})`}\n    >\n      <rect\n        x={-r / 8} y={-r / 16}\n        width={6 * r / 8} height={6 * r / 8}\n        rx={r / 10} ry={r / 10}\n      />\n      {images?.[name] && (\n        <image\n          xlinkHref={images[name]}\n          width={r / 2} height={r / 2}\n          filter='url(#shadow)'\n        />\n      )}\n      <text\n        textAnchor='middle'\n        x={2 * r / 8} y={5 * r / 8}\n      >{name}</text>\n    </g>\n  )\n\n  const StarSide = ({ colors, rot }) => (\n    <Side {...{ colors: useMemo(() => colors, []), rot, l, r }}/>\n  )\n\n  const mouseMove = (evt) => {\n    if(!!active && !!svg.current) {\n      const pos = { x: evt.clientX, y: evt.clientY }\n      const p = pointFor(pos)\n      const { x, y } = p.matrixTransform(\n        svg.current.getScreenCTM().inverse()\n      )\n      setPosition(active, { x, y })\n    }\n  }\n  const mouseUp = (evt) => {\n    setActive(false)\n    setConflict(false)\n  }\n  const mouseOut = (evt) => {\n    // ToDo: handle mouse outs of the document as release events\n    if(evt.target === svg.current) {\n      mouseUp(evt)\n    }\n    evt.stopPropagation()\n  }\n\n  return (\n    <Stack direction='column' w='100%' align='center'>\n      <Box minH='3.75rem'>\n        {!!conflict && (\n          <Box\n            align='center' className='conflict'\n            ml='3rem' w='100%'\n            background={`linear-gradient(\n              to left,\n              transparent, ${conflict.right.color},\n              ${conflict.left.color}, transparent\n            )`}\n          >\n            <Heading maxW='25rem' p={2}>\n              <Stack direction='row'>\n                <Text color={conflict.left.color}\n                  style={{ WebkitTextStrokeColor: conflict.right.color }}\n                >\n                  {conflict.left.text}\n                </Text>\n                <Spacer/>\n                <Text color={conflict.right.color}\n                  style={{ WebkitTextStrokeColor: conflict.left.color }}\n                >\n                  {conflict.right.text}\n                </Text>\n              </Stack>\n            </Heading>\n          </Box>\n        )}\n      </Box>\n      <SVG\n        xmlns=\"http://www.w3.org/2000/svg\"\n        xmlnsXlink=\"http://www.w3.org/1999/xlink\"\n        width=\"100%\" height=\"100%\"\n        viewBox={[-r * 1.6, -r * 1.35, 3.2 * r, 2.7 * r].join(' ')}\n        onMouseMove={mouseMove} onMouseUp={mouseUp} onMouseOut={mouseOut}\n        preserveAspectRatio='xMidYMid meet'\n        ref={svg}\n      >\n        <defs>\n          <filter id=\"shadow\">\n            <feGaussianBlur in=\"SourceAlpha\" stdDeviation=\"8\">\n              <animate attributeName='stdDeviation' values='8; 10; 8' dur='1s' begin='0s' repeatCount='indefinite'/>\n            </feGaussianBlur>\n            <feOffset dx=\"0\" dy=\"5\" result=\"offsetblur\"/>\n            <feFlood floodColor=\"black\">\n              <animate attributeName='floodColor' values='black; orange; black; red; blue; white' dur='4s' begin='0s' repeatCount='indefinite'/>\n            </feFlood>\n            <feComposite in2=\"offsetblur\" operator=\"in\"/>\n            <feMerge>\n              <feMergeNode/>\n              <feMergeNode in=\"SourceGraphic\"/>\n            </feMerge>\n          </filter>\n          <path id='head' d=\"M 0 0 L 10 5 L 0 10 z\"/>\n          {\n            ['white', 'blue', 'black', 'green', 'red']\n            .map((color) => (\n              <marker id={`${color}arrow`} key={color}\n                viewBox=\"0 0 10 10\" refX=\"5\" refY=\"5\"\n                markerWidth=\"4\" markerHeight=\"8\"\n                orient=\"auto-start-reverse\"\n              >\n                <use href='#head' fill={color}/>\n              </marker>\n            ))\n          }\n        </defs>\n        <title>Magic: The Gathering Five Color Personality Slider</title>\n        <g className='images'>\n          <BgImage\n            x={0} y={-(d + r / 4)}\n            name='Justice'\n          />\n          <BgImage\n            x={(d * Math.sin(Math.PI / 5)) / Math.sin(Math.PI / 2) + r / 4}\n            y={(d * Math.sin(3 * Math.PI / 10)) / Math.sin(Math.PI / 2) + r / 4}\n            name='Ambition'\n          />\n          <BgImage\n            x={-(d * Math.sin(Math.PI / 5) / Math.sin(Math.PI / 2) + r / 4)}\n            y={(d * Math.sin(3 * Math.PI / 10)) / Math.sin(Math.PI / 2) + r / 4}\n            name='Chaos'\n          />\n          <BgImage\n            x={-(d * Math.sin(2 * Math.PI / 5) / Math.sin(Math.PI / 2) + r / 4)}\n            y={-(d * Math.sin(Math.PI / 10) / Math.sin(Math.PI / 2))}\n            name='Balance'\n          />\n          <BgImage\n            x={d * Math.sin(2 * Math.PI / 5) / Math.sin(Math.PI / 2) + r / 4}\n            y={-(d * Math.sin(Math.PI / 10) / Math.sin(Math.PI / 2))}\n            name='Wisdom'\n          />\n        </g>\n        <g className='links' transform={`translate(0, ${r / 8})`}>\n          <Linkages {...{ size: 2 * r }}/>\n        </g>\n        <g className='sides' transform={`translate(0, ${r / 8})`}>\n          <StarSide rot={-4 * Math.PI / 10} colors={['red', 'white']}/>\n          <StarSide rot={4 * Math.PI / 10} colors={['white', 'black']}/>\n          <StarSide rot={-8 * Math.PI / 10} colors={['black', 'green']}/>\n          <StarSide rot={0} colors={['green', 'blue']}/>\n          <StarSide rot={8 * Math.PI / 10} colors={['blue', 'red']}/>\n        </g>\n      </SVG>\n    </Stack>\n  )\n}\n\nexport default connect(\n  (state) => {\n    const { active, conflict } = state\n    return { active, conflict }\n  },\n)(Sliders)","import { Stack } from '@chakra-ui/react'\nimport { connect } from 'react-redux'\nimport Sliders from './Sliders'\nimport Results from './Results'\nimport Ranges from './Ranges'\n\nconst Explore = () => (\n  <Stack direction='row'>\n    <Sliders/>\n    {/*<Ranges/>*/}\n    <Results/>\n  </Stack>\n)\n\nexport default connect(\n  (state) => {\n    const { } = state\n    return { }\n  },\n)(Explore)","import {\n  Spacer, Stack, Text, HStack, Input\n} from '@chakra-ui/react'\nimport { connect } from 'react-redux'\nimport { useEffect, useState } from 'react'\nimport { setHandle } from './Reducer'\nimport { reasons } from './data/order'\n\nconst Ranges = () => {\n  const range = 100\n  const numReasons = Object.keys(reasons).length\n  const [values, setValues] = (\n    useState(Array(numReasons).fill(0))\n  )\n  const change = (id, idx, { target: { value: val }}) => {\n    setValues(vs => {\n      vs = [...vs]\n      vs.splice(idx, 1, val)\n      return vs\n    })\n    setHandle(id, { x: val / range, y: 0.5 })\n  }\n\n  return (\n    <Stack align='center' minW={['100%', '20rem']} ml='5rem'>\n      {Object.entries(reasons).map(([id, split], idx) => {\n        return (\n          <Stack key={id} w='100%'>\n            <HStack w='100%'>\n              <Text>{split.left}</Text>\n              <Spacer/>\n              <Text>{split.right}</Text>\n            </HStack>\n            <Input type='range'\n              maxH={4}\n              min={-range} max={range} value={values[idx]}\n              bg={`linear-gradient(\n                to right, ${id.split('-').join(', ')}\n              )`}\n              onChange={evt => change(id, idx, evt)}\n            />\n          </Stack>\n        )\n      })}\n    </Stack>\n  )\n}\n\nexport default connect(\n  (state) => {\n    const { } = state\n    return { }\n  },\n)(Ranges)","import {\n  Stack, Button, Heading, Text as ChakraText,\n  Link as ChakraLink,\n} from '@chakra-ui/react'\nimport { Link as RouterLink } from 'react-router-dom'\n\nconst Text = ({ children }) => (\n  <ChakraText textAlign='justify'>{children}</ChakraText>\n)\nconst Link = ({ children, ...args }) => (\n  <ChakraLink as={RouterLink} {...args}>{children}</ChakraLink>\n)\n\nexport default () => (\n  <Stack align='center' m='auto' p='1rem' maxW='40rem'>\n    <Heading align='center' p='2rem'>The Magic: The Gathering Five Color Disposition Alignment (Adjacent)</Heading>\n    <Text>Magic: The Gathering is a card game where play requires holding \"mana\". Mana comes in five colors: red, white, black, green, and blue. Each color represents a different disposition and world-view.</Text>\n    <Text>This seemingly simple set of five becomes surprisingly complex because <Link textDecoration='underline' to='/combos'>all combinations of zero, one, two, three, four, and five colors is considered</Link>.</Text>\n    <Text>The Magic mythos has organizations – guilds, governments, tribes, etc. – which embody each of these combinations.</Text>\n    <Text>There is <ChakraLink textDecoration='underline' href='//humanparts.medium.com/the-mtg-color-wheel-c9700a7cf36d'>a comprehensive article</ChakraLink> describing the fundamental characteristics and conflicts.</Text>\n    <Link to='/test'><Button>Test</Button></Link>\n    <Link to='/combos'><Button>Combinations</Button></Link>\n    <Link to='/explore'><Button>Experiment</Button></Link>\n  </Stack>\n)","export default __webpack_public_path__ + \"static/media/background.89a5c9b4.jpg\";","import {\n  HashRouter as Router, Switch, Route\n} from 'react-router-dom'\nimport {\n  ChakraProvider, extendTheme, Menu, MenuItem,\n  MenuButton, Button, MenuList, Link as ChakraLink,\n} from '@chakra-ui/react'\nimport {\n  ChevronDownIcon, HamburgerIcon\n} from \"@chakra-ui/icons\"\nimport { Provider } from 'react-redux'\nimport { Link as RouterLink } from 'react-router-dom'\nimport Test from './Test'\nimport Combos from './Combos'\nimport Explore from './Explore'\nimport Home from './Home'\nimport { store } from './Reducer'\nimport bg from './images/background.jpg'\n\nconst overrides = {\n  config: {\n    initialColorMode: 'dark',\n  },\n  styles: {\n    global: {\n      body: {\n        bgImage: `url('${bg}')`,\n      },\n      a: {\n        textDecoration: 'underline',\n      },\n    },\n  },\n}\nconst theme = extendTheme(overrides)\n\nconst Link = ({ children, to }) => (\n  <ChakraLink\n    as={RouterLink}\n    {...{ to }}\n    w='100%'\n  >{children}</ChakraLink>\n)\n\nexport default () => (\n  <ChakraProvider theme={theme}><Provider store={store}>\n    <Router basename='/'>\n      <Menu>\n        {({ isOpen }) => (\n          <>\n            <MenuButton\n              isActive={isOpen} as={Button}\n              position='fixed' top='1rem' left='1rem'\n            >\n              {isOpen ? <ChevronDownIcon/> : <HamburgerIcon/>}\n            </MenuButton>\n            <MenuList>\n            <MenuItem>\n                <Link to='/'>🏡 Home</Link>\n              </MenuItem>\n              <MenuItem>\n                <Link to='/test'>✍ Test</Link>\n              </MenuItem>\n              <MenuItem>\n                <Link to='/combos'>🕸 Combinations</Link>\n              </MenuItem>\n              <MenuItem>\n                <Link to='/explore'>🔭 Explore</Link>\n              </MenuItem>\n            </MenuList>\n          </>\n        )}\n      </Menu>\n      <Switch>\n        <Route path='/combos' component={Combos}/>\n        <Route path='/explore' component={Explore}/>\n        <Route path='/test/:answers' component={Test}/>\n        <Route path='/test' component={Test}/>\n        <Route path='/' exact={false} component={Home}/>\n      </Switch>\n    </Router>\n  </Provider></ChakraProvider>\n)","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport reportWebVitals from './util/reportWebVitals'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals()\n","// https://stackoverflow.com/a/64628011/264008\nexport const Range = (\n  function*(total = 0, step = 1, from = 0) {\n    for(let i = 0; i < total; yield from + i++ * step) {}\n  }\n)\n\nexport const capitalize = (str) => (\n  str && str.length > 0 ? (\n    `${str[0].toUpperCase()}${str.substring(1)}`\n  ) : (\n    str\n  )\n)\n\n// radians to degrees\nexport const toDeg = (rad) => rad * 180 / Math.PI\n\n// making BigInt available\nexport const BigInt = window.BigInt\n\n// convert BigInt to web safe base64\nexport const btoa = (big) => (\n  Buffer.from(big.toString(16), 'hex').toString('base64')\n)\n// convert from base64 to a BigInt\nexport const atob = (b64) => (\n  BigInt(`0x${Buffer.from(b64, 'base64').toString('hex') || '00'}`)\n)\n\n// Proxy function for a hash that returns 0 if falsey\nexport const defZero = {\n  get: (target, name) => (\n    name in target ? target[name] : 0\n  )\n}\n","export default __webpack_public_path__ + \"static/media/Ambition.9b2c66ed.svg\";","export default __webpack_public_path__ + \"static/media/Balance.50ff1b67.svg\";","export default __webpack_public_path__ + \"static/media/Chaos.07c20a17.svg\";","export default __webpack_public_path__ + \"static/media/Justice.09907470.svg\";","export default __webpack_public_path__ + \"static/media/Wisdom.fbfef02c.svg\";"],"sourceRoot":""}